# Makefile.in generated by automake 1.13.4 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/eventloop
pkglibdir = $(libdir)/eventloop
pkglibexecdir = $(libexecdir)/eventloop
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = EchoServer1$(EXEEXT) \
	EchoServer2$(EXEEXT) EchoClient$(EXEEXT) \
	SeqPacketEchoServer$(EXEEXT) \
	SeqPacketEchoClient$(EXEEXT)
check_PROGRAMS = testrunner$(EXEEXT)
subdir = .
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) \
	$(top_srcdir)/build-aux/depcomp $(pkginclude_HEADERS) \
	$(pkginclude_tst_HEADERS) README build-aux/config.guess \
	build-aux/config.sub build-aux/depcomp build-aux/install-sh \
	build-aux/missing build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/config.guess \
	$(top_srcdir)/build-aux/config.sub \
	$(top_srcdir)/build-aux/install-sh \
	$(top_srcdir)/build-aux/ltmain.sh \
	$(top_srcdir)/build-aux/missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_boost_base.m4 \
	$(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(pkgincludedir)" \
	"$(DESTDIR)$(pkginclude_tstdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libEventLoop_la_DEPENDENCIES =
am__dirstamp = $(am__leading_dot)dirstamp
am_libEventLoop_la_OBJECTS = src/lib/libEventLoop_la-Abort.lo \
	src/lib/libEventLoop_la-AsyncRunner.lo \
	src/lib/libEventLoop_la-BaseEpollRunner.lo \
	src/lib/libEventLoop_la-CallbackQueue.lo \
	src/lib/libEventLoop_la-Callee.lo \
	src/lib/libEventLoop_la-ChildProcess.lo \
	src/lib/libEventLoop_la-ControlMessage.lo \
	src/lib/libEventLoop_la-DumpCreator.lo \
	src/lib/libEventLoop_la-DumpFormatter.lo \
	src/lib/libEventLoop_la-DumpUtils.lo \
	src/lib/libEventLoop_la-Epoll.lo \
	src/lib/libEventLoop_la-EpollRunner.lo \
	src/lib/libEventLoop_la-FDListener.lo \
	src/lib/libEventLoop_la-FDListenerMap.lo \
	src/lib/libEventLoop_la-FDMonitor.lo \
	src/lib/libEventLoop_la-FileDescriptor.lo \
	src/lib/libEventLoop_la-ListeningSocket.lo \
	src/lib/libEventLoop_la-MockableRunner.lo \
	src/lib/libEventLoop_la-Runner.lo \
	src/lib/libEventLoop_la-SeqPacketSocket.lo \
	src/lib/libEventLoop_la-SignalSet.lo \
	src/lib/libEventLoop_la-SigPipeSuppressor.lo \
	src/lib/libEventLoop_la-SocketAddress.lo \
	src/lib/libEventLoop_la-StreamBuffer.lo \
	src/lib/libEventLoop_la-StreamSocket.lo \
	src/lib/libEventLoop_la-System.lo \
	src/lib/libEventLoop_la-SystemException.lo \
	src/lib/libEventLoop_la-Timer.lo \
	src/lib/libEventLoop_la-TimerQueue.lo \
	src/lib/libEventLoop_la-TypeName.lo \
	src/lib/libEventLoop_la-UncaughtExceptionHandler.lo
libEventLoop_la_OBJECTS = $(am_libEventLoop_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libEventLoop_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libEventLoop_la_LDFLAGS) \
	$(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am__EchoClient_SOURCES_DIST = src/examples/EchoClient/main.cpp
am_EchoClient_OBJECTS = src/examples/EchoClient/EchoClient-main.$(OBJEXT)
EchoClient_OBJECTS = $(am_EchoClient_OBJECTS)
am__DEPENDENCIES_1 =
EchoClient_DEPENDENCIES = $(am__DEPENDENCIES_1)
EchoClient_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(EchoClient_LDFLAGS) $(LDFLAGS) -o $@
am__EchoServer1_SOURCES_DIST =  \
	src/examples/EchoServer1/EchoServer.cpp \
	src/examples/EchoServer1/main.cpp \
	include/examples/EchoServer.hpp
am_EchoServer1_OBJECTS = src/examples/EchoServer1/EchoServer1-EchoServer.$(OBJEXT) \
	src/examples/EchoServer1/EchoServer1-main.$(OBJEXT)
EchoServer1_OBJECTS = $(am_EchoServer1_OBJECTS)
EchoServer1_DEPENDENCIES = $(am__DEPENDENCIES_1)
EchoServer1_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(EchoServer1_LDFLAGS) $(LDFLAGS) -o $@
am__EchoServer2_SOURCES_DIST = src/examples/EchoServer2/main.cpp \
	src/examples/EchoServer1/EchoServer.cpp \
	include/examples/EchoServer.hpp
am_EchoServer2_OBJECTS = src/examples/EchoServer2/EchoServer2-main.$(OBJEXT) \
	src/examples/EchoServer1/EchoServer2-EchoServer.$(OBJEXT)
EchoServer2_OBJECTS = $(am_EchoServer2_OBJECTS)
EchoServer2_DEPENDENCIES = $(am__DEPENDENCIES_1)
EchoServer2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(EchoServer2_LDFLAGS) $(LDFLAGS) -o $@
am__SeqPacketEchoClient_SOURCES_DIST =  \
	src/examples/SeqPacketEchoClient/main.cpp
am_SeqPacketEchoClient_OBJECTS = src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.$(OBJEXT)
SeqPacketEchoClient_OBJECTS = $(am_SeqPacketEchoClient_OBJECTS)
SeqPacketEchoClient_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
SeqPacketEchoClient_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(SeqPacketEchoClient_LDFLAGS) \
	$(LDFLAGS) -o $@
am__SeqPacketEchoServer_SOURCES_DIST =  \
	src/examples/SeqPacketEchoServer/main.cpp
am_SeqPacketEchoServer_OBJECTS = src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.$(OBJEXT)
SeqPacketEchoServer_OBJECTS = $(am_SeqPacketEchoServer_OBJECTS)
SeqPacketEchoServer_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1)
SeqPacketEchoServer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(SeqPacketEchoServer_LDFLAGS) \
	$(LDFLAGS) -o $@
am__objects_1 = 3rdparty/gmock/gtest/src/testrunner-gtest.$(OBJEXT) \
	3rdparty/gmock/gtest/src/testrunner-gtest-death-test.$(OBJEXT) \
	3rdparty/gmock/gtest/src/testrunner-gtest-filepath.$(OBJEXT) \
	3rdparty/gmock/gtest/src/testrunner-gtest-port.$(OBJEXT) \
	3rdparty/gmock/gtest/src/testrunner-gtest-printers.$(OBJEXT) \
	3rdparty/gmock/gtest/src/testrunner-gtest-test-part.$(OBJEXT) \
	3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.$(OBJEXT) \
	3rdparty/gmock/src/testrunner-gmock-cardinalities.$(OBJEXT) \
	3rdparty/gmock/src/testrunner-gmock.$(OBJEXT) \
	3rdparty/gmock/src/testrunner-gmock-internal-utils.$(OBJEXT) \
	3rdparty/gmock/src/testrunner-gmock-matchers.$(OBJEXT) \
	3rdparty/gmock/src/testrunner-gmock-spec-builders.$(OBJEXT)
am_testrunner_OBJECTS = $(am__objects_1) \
	tst/testrunner-AsyncRunnerTest.$(OBJEXT) \
	tst/testrunner-BaseEpollRunnerTest.$(OBJEXT) \
	tst/testrunner-CallbackQueueTest.$(OBJEXT) \
	tst/testrunner-CalleeTest.$(OBJEXT) \
	tst/testrunner-ChildProcessTest.$(OBJEXT) \
	tst/testrunner-ControlMessageTest.$(OBJEXT) \
	tst/testrunner-DumpCreatorTest.$(OBJEXT) \
	tst/testrunner-DumpFormatterTest.$(OBJEXT) \
	tst/testrunner-DumpTest.$(OBJEXT) \
	tst/testrunner-DumpUtilsTest.$(OBJEXT) \
	tst/testrunner-EpollRunnerTest.$(OBJEXT) \
	tst/testrunner-EpollRunnerWithoutSignalsTest.$(OBJEXT) \
	tst/testrunner-EpollRunnerWithSignalsTest.$(OBJEXT) \
	tst/testrunner-EpollTest.$(OBJEXT) \
	tst/testrunner-ExceptionTest.$(OBJEXT) \
	tst/testrunner-FDListenerMapTest.$(OBJEXT) \
	tst/testrunner-FDListenerTest.$(OBJEXT) \
	tst/testrunner-FDMonitorTest.$(OBJEXT) \
	tst/testrunner-FileDescriptorTest.$(OBJEXT) \
	tst/testrunner-ListeningSocketTest.$(OBJEXT) \
	tst/testrunner-main.$(OBJEXT) \
	tst/testrunner-PostponeDeletionTest.$(OBJEXT) \
	tst/testrunner-RunnerTest.$(OBJEXT) \
	tst/testrunner-SeqPacketSocketMock.$(OBJEXT) \
	tst/testrunner-SeqPacketSocketTest.$(OBJEXT) \
	tst/testrunner-SignalSetTest.$(OBJEXT) \
	tst/testrunner-SocketAddressTest.$(OBJEXT) \
	tst/testrunner-StreamBufferTest.$(OBJEXT) \
	tst/testrunner-StreamSocketTest.$(OBJEXT) \
	tst/testrunner-SystemExceptionTest.$(OBJEXT) \
	tst/testrunner-SystemTest.$(OBJEXT) \
	tst/testrunner-TimerQueueTest.$(OBJEXT) \
	tst/testrunner-TimerTest.$(OBJEXT) \
	tst/testrunner-TypeNameTest.$(OBJEXT) \
	tst/testrunner-UncaughtExceptionHandlerTest.$(OBJEXT) \
	tst/testrunner-WeakCallbackTest.$(OBJEXT)
testrunner_OBJECTS = $(am_testrunner_OBJECTS)
testrunner_DEPENDENCIES =
testrunner_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(testrunner_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libEventLoop_la_SOURCES) $(EchoClient_SOURCES) \
	$(EchoServer1_SOURCES) $(EchoServer2_SOURCES) \
	$(SeqPacketEchoClient_SOURCES) $(SeqPacketEchoServer_SOURCES) \
	$(testrunner_SOURCES)
DIST_SOURCES = $(libEventLoop_la_SOURCES) \
	$(am__EchoClient_SOURCES_DIST) $(am__EchoServer1_SOURCES_DIST) \
	$(am__EchoServer2_SOURCES_DIST) \
	$(am__SeqPacketEchoClient_SOURCES_DIST) \
	$(am__SeqPacketEchoServer_SOURCES_DIST) $(testrunner_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(nodist_pkgconfig_DATA)
HEADERS = $(pkginclude_HEADERS) $(pkginclude_tst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
pkgincludedir = $(includedir)/EventLoop
ACLOCAL = ${SHELL} /BB/bb_eventloop/build-aux/missing aclocal-1.13
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /BB/bb_eventloop/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /BB/bb_eventloop/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /BB/bb_eventloop/build-aux/missing automake-1.13
AWK = gawk
BOOST_CPPFLAGS = -I/usr/include
BOOST_LDFLAGS = -L/usr/lib64
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -std=c++11
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"EventLoop\" -DPACKAGE_TARNAME=\"eventloop\" -DPACKAGE_VERSION=\"0.1.0\" -DPACKAGE_STRING=\"EventLoop\ 0.1.0\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"eventloop\" -DVERSION=\"0.1.0\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE_BOOST=/\*\*/
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_CXX11 = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /BB/bb_eventloop/build-aux/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = eventloop
PACKAGE_BUGREPORT = 
PACKAGE_NAME = EventLoop
PACKAGE_STRING = EventLoop 0.1.0
PACKAGE_TARNAME = eventloop
PACKAGE_URL = 
PACKAGE_VERSION = 0.1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.1.0
abs_builddir = /BB/bb_eventloop
abs_srcdir = /BB/bb_eventloop
abs_top_builddir = /BB/bb_eventloop
abs_top_srcdir = /BB/bb_eventloop
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /BB/bb_eventloop/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
ACLOCAL_AMFLAGS = -I m4
BASE_CPPFLAGS = -Wall -Werror -Wextra -I$(top_srcdir)/include
lib_LTLIBRARIES = libEventLoop.la
libEventLoop_la_SOURCES = \
    src/lib/Abort.cpp \
    src/lib/AsyncRunner.cpp \
    src/lib/BaseEpollRunner.cpp \
    src/lib/CallbackQueue.cpp \
    src/lib/Callee.cpp \
    src/lib/ChildProcess.cpp \
    src/lib/ControlMessage.cpp \
    src/lib/DumpCreator.cpp \
    src/lib/DumpFormatter.cpp \
    src/lib/DumpUtils.cpp \
    src/lib/Epoll.cpp \
    src/lib/EpollRunner.cpp \
    src/lib/FDListener.cpp \
    src/lib/FDListenerMap.cpp \
    src/lib/FDMonitor.cpp \
    src/lib/FileDescriptor.cpp \
    src/lib/ListeningSocket.cpp \
    src/lib/MockableRunner.cpp \
    src/lib/Runner.cpp \
    src/lib/SeqPacketSocket.cpp \
    src/lib/SignalSet.cpp \
    src/lib/SigPipeSuppressor.cpp \
    src/lib/SocketAddress.cpp \
    src/lib/StreamBuffer.cpp \
    src/lib/StreamSocket.cpp \
    src/lib/System.cpp \
    src/lib/SystemException.cpp \
    src/lib/Timer.cpp \
    src/lib/TimerQueue.cpp \
    src/lib/TypeName.cpp \
    src/lib/UncaughtExceptionHandler.cpp \
    include/private/Abort.hpp \
    include/private/BaseEpollRunner.hpp \
    include/private/CallbackQueue.hpp \
    include/private/DumpFormatter.hpp \
    include/private/Epoll.hpp \
    include/private/FDListenerMap.hpp \
    include/private/FDMonitor.hpp \
    include/private/SigPipeSuppressor.hpp \
    include/private/System.hpp \
    include/private/TimerQueue.hpp

libEventLoop_la_CPPFLAGS = \
    $(BASE_CPPFLAGS) -D_GNU_SOURCE -Wno-missing-field-initializers

libEventLoop_la_LDFLAGS = 
libEventLoop_la_LIBADD = -lboost_thread -lboost_regex -lboost_date_time
pkginclude_HEADERS = \
    include/EventLoop/AsyncRunner.hpp \
    include/EventLoop/Callee.hpp \
    include/EventLoop/ChildProcess.hpp \
    include/EventLoop/ControlMessage.hpp \
    include/EventLoop/Dumpable.hpp \
    include/EventLoop/DumpCreator.hpp \
    include/EventLoop/DumpUtils.hpp \
    include/EventLoop/EpollRunner.hpp \
    include/EventLoop/Exception.hpp \
    include/EventLoop/FDListener.hpp \
    include/EventLoop/FileDescriptor.hpp \
    include/EventLoop/ListeningSocket.hpp \
    include/EventLoop/PostponeDeletion.hpp \
    include/EventLoop/Runner.hpp \
    include/EventLoop/SeqPacketSocket.hpp \
    include/EventLoop/SignalSet.hpp \
    include/EventLoop/SocketAddress.hpp \
    include/EventLoop/StreamBuffer.hpp \
    include/EventLoop/StreamSocket.hpp \
    include/EventLoop/SystemException.hpp \
    include/EventLoop/Timer.hpp \
    include/EventLoop/TimerPosition.hpp \
    include/EventLoop/TypeName.hpp \
    include/EventLoop/UncaughtExceptionHandler.hpp \
    include/EventLoop/WeakCallback.hpp

pkginclude_tstdir = $(pkgincludedir)/tst
pkginclude_tst_HEADERS = \
    include/EventLoop/tst/MockableRunner.hpp

pkgconfigdir = $(libdir)/pkgconfig
nodist_pkgconfig_DATA = libEventLoop.pc
EXAMPLE_CPPFLAGS = $(BASE_CPPFLAGS)
EXAMPLE_LDADD = -lEventLoop -lboost_system
EchoServer1_SOURCES = \
    src/examples/EchoServer1/EchoServer.cpp \
    src/examples/EchoServer1/main.cpp \
    include/examples/EchoServer.hpp

EchoServer1_CPPFLAGS = $(EXAMPLE_CPPFLAGS)
EchoServer1_LDFLAGS = 
EchoServer1_LDADD = $(EXAMPLE_LDADD)
EXTRA_EchoServer1_DEPENDENCIES = libEventLoop.la
EchoServer2_SOURCES = \
    src/examples/EchoServer2/main.cpp \
    src/examples/EchoServer1/EchoServer.cpp \
    include/examples/EchoServer.hpp

EchoServer2_CPPFLAGS = $(EXAMPLE_CPPFLAGS)
EchoServer2_LDFLAGS = 
EchoServer2_LDADD = $(EXAMPLE_LDADD)
EXTRA_EchoServer2_DEPENDENCIES = libEventLoop.la
EchoClient_SOURCES = \
    src/examples/EchoClient/main.cpp

EchoClient_CPPFLAGS = $(EXAMPLE_CPPFLAGS)
EchoClient_LDFLAGS = 
EchoClient_LDADD = $(EXAMPLE_LDADD)
EXTRA_EchoClient_DEPENDENCIES = libEventLoop.la
SeqPacketEchoServer_SOURCES = \
    src/examples/SeqPacketEchoServer/main.cpp

SeqPacketEchoServer_CPPFLAGS = $(EXAMPLE_CPPFLAGS)
SeqPacketEchoServer_LDFLAGS = 
SeqPacketEchoServer_LDADD = $(EXAMPLE_LDADD)
EXTRA_SeqPacketEchoServer_DEPENDENCIES = libEventLoop.la
SeqPacketEchoClient_SOURCES = \
    src/examples/SeqPacketEchoClient/main.cpp

SeqPacketEchoClient_CPPFLAGS = $(EXAMPLE_CPPFLAGS)
SeqPacketEchoClient_LDFLAGS = 
SeqPacketEchoClient_LDADD = $(EXAMPLE_LDADD)
EXTRA_SeqPacketEchoClient_DEPENDENCIES = libEventLoop.la
GMOCK_SRC = \
    3rdparty/gmock/gtest/include/gtest/gtest-death-test.h \
    3rdparty/gmock/gtest/include/gtest/gtest.h \
    3rdparty/gmock/gtest/include/gtest/gtest-message.h \
    3rdparty/gmock/gtest/include/gtest/gtest-param-test.h \
    3rdparty/gmock/gtest/include/gtest/gtest_pred_impl.h \
    3rdparty/gmock/gtest/include/gtest/gtest-printers.h \
    3rdparty/gmock/gtest/include/gtest/gtest_prod.h \
    3rdparty/gmock/gtest/include/gtest/gtest-spi.h \
    3rdparty/gmock/gtest/include/gtest/gtest-test-part.h \
    3rdparty/gmock/gtest/include/gtest/gtest-typed-test.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-death-test-internal.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-filepath.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-internal.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-linked_ptr.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-param-util-generated.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-param-util.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-port.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-string.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-tuple.h \
    3rdparty/gmock/gtest/include/gtest/internal/gtest-type-util.h \
    3rdparty/gmock/gtest/src/gtest.cc \
    3rdparty/gmock/gtest/src/gtest-death-test.cc \
    3rdparty/gmock/gtest/src/gtest-filepath.cc \
    3rdparty/gmock/gtest/src/gtest-internal-inl.h \
    3rdparty/gmock/gtest/src/gtest-port.cc \
    3rdparty/gmock/gtest/src/gtest-printers.cc \
    3rdparty/gmock/gtest/src/gtest-test-part.cc \
    3rdparty/gmock/gtest/src/gtest-typed-test.cc \
    3rdparty/gmock/include/gmock/gmock-actions.h \
    3rdparty/gmock/include/gmock/gmock-cardinalities.h \
    3rdparty/gmock/include/gmock/gmock-generated-actions.h \
    3rdparty/gmock/include/gmock/gmock-generated-function-mockers.h \
    3rdparty/gmock/include/gmock/gmock-generated-matchers.h \
    3rdparty/gmock/include/gmock/gmock-generated-nice-strict.h \
    3rdparty/gmock/include/gmock/gmock.h \
    3rdparty/gmock/include/gmock/gmock-matchers.h \
    3rdparty/gmock/include/gmock/gmock-more-actions.h \
    3rdparty/gmock/include/gmock/gmock-more-matchers.h \
    3rdparty/gmock/include/gmock/gmock-spec-builders.h \
    3rdparty/gmock/include/gmock/internal/gmock-generated-internal-utils.h \
    3rdparty/gmock/include/gmock/internal/gmock-internal-utils.h \
    3rdparty/gmock/include/gmock/internal/gmock-port.h \
    3rdparty/gmock/src/gmock-cardinalities.cc \
    3rdparty/gmock/src/gmock.cc \
    3rdparty/gmock/src/gmock-internal-utils.cc \
    3rdparty/gmock/src/gmock-matchers.cc \
    3rdparty/gmock/src/gmock-spec-builders.cc

testrunner_SOURCES = \
    $(GMOCK_SRC) \
    tst/AsyncRunnerTest.cpp \
    tst/BaseEpollRunnerTest.cpp \
    tst/CallbackQueueTest.cpp \
    tst/CalleeTest.cpp \
    tst/ChildProcessTest.cpp \
    tst/ControlMessageTest.cpp \
    tst/DumpCreatorTest.cpp \
    tst/DumpFormatterTest.cpp \
    tst/DumpTest.cpp \
    tst/DumpUtilsTest.cpp \
    tst/EpollRunnerTest.cpp \
    tst/EpollRunnerWithoutSignalsTest.cpp \
    tst/EpollRunnerWithSignalsTest.cpp \
    tst/EpollTest.cpp \
    tst/ExceptionTest.cpp \
    tst/FDListenerMapTest.cpp \
    tst/FDListenerTest.cpp \
    tst/FDMonitorTest.cpp \
    tst/FileDescriptorTest.cpp \
    tst/ListeningSocketTest.cpp \
    tst/main.cpp \
    tst/PostponeDeletionTest.cpp \
    tst/RunnerTest.cpp \
    tst/SeqPacketSocketMock.cpp \
    tst/SeqPacketSocketTest.cpp \
    tst/SignalSetTest.cpp \
    tst/SocketAddressTest.cpp \
    tst/StreamBufferTest.cpp \
    tst/StreamSocketTest.cpp \
    tst/SystemExceptionTest.cpp \
    tst/SystemTest.cpp \
    tst/TimerQueueTest.cpp \
    tst/TimerTest.cpp \
    tst/TypeNameTest.cpp \
    tst/UncaughtExceptionHandlerTest.cpp \
    tst/WeakCallbackTest.cpp \
    include/private/tst/AsyncRunnerMock.hpp \
    include/private/tst/BaseEpollRunnerMock.hpp \
    include/private/tst/DummyFDListenerMap.hpp \
    include/private/tst/DumpTestHelper.hpp \
    include/private/tst/DumpTest.hpp \
    include/private/tst/EpollRunnerMock.hpp \
    include/private/tst/FDListenerMock.hpp \
    include/private/tst/ListeningSocketMock.hpp \
    include/private/tst/SeqPacketSocketMock.hpp \
    include/private/tst/StreamSocketMock.hpp \
    include/private/tst/SystemMock.hpp \
    include/private/tst/TimerQueueMock.hpp

testrunner_CPPFLAGS = \
    $(BASE_CPPFLAGS) -Wno-missing-field-initializers \
    -I$(top_srcdir)/3rdparty/gmock/gtest/include \
    -I$(top_srcdir)/3rdparty/gmock/gtest \
    -I$(top_srcdir)/3rdparty/gmock/include \
    -I$(top_srcdir)/3rdparty/gmock

testrunner_LDFLAGS = -pthread
testrunner_LDADD = -lEventLoop -lboost_system
EXTRA_testrunner_DEPENDENCIES = libEventLoop.la
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .cpp .lo .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/lib/$(am__dirstamp):
	@$(MKDIR_P) src/lib
	@: > src/lib/$(am__dirstamp)
src/lib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/lib/$(DEPDIR)
	@: > src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-Abort.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-AsyncRunner.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-BaseEpollRunner.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-CallbackQueue.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-Callee.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-ChildProcess.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-ControlMessage.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-DumpCreator.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-DumpFormatter.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-DumpUtils.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-Epoll.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-EpollRunner.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-FDListener.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-FDListenerMap.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-FDMonitor.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-FileDescriptor.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-ListeningSocket.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-MockableRunner.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-Runner.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-SeqPacketSocket.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-SignalSet.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-SigPipeSuppressor.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-SocketAddress.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-StreamBuffer.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-StreamSocket.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-System.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-SystemException.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-Timer.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-TimerQueue.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-TypeName.lo: src/lib/$(am__dirstamp) \
	src/lib/$(DEPDIR)/$(am__dirstamp)
src/lib/libEventLoop_la-UncaughtExceptionHandler.lo:  \
	src/lib/$(am__dirstamp) src/lib/$(DEPDIR)/$(am__dirstamp)

libEventLoop.la: $(libEventLoop_la_OBJECTS) $(libEventLoop_la_DEPENDENCIES) $(EXTRA_libEventLoop_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libEventLoop_la_LINK) -rpath $(libdir) $(libEventLoop_la_OBJECTS) $(libEventLoop_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
src/examples/EchoClient/$(am__dirstamp):
	@$(MKDIR_P) src/examples/EchoClient
	@: > src/examples/EchoClient/$(am__dirstamp)
src/examples/EchoClient/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/examples/EchoClient/$(DEPDIR)
	@: > src/examples/EchoClient/$(DEPDIR)/$(am__dirstamp)
src/examples/EchoClient/EchoClient-main.$(OBJEXT):  \
	src/examples/EchoClient/$(am__dirstamp) \
	src/examples/EchoClient/$(DEPDIR)/$(am__dirstamp)

EchoClient$(EXEEXT): $(EchoClient_OBJECTS) $(EchoClient_DEPENDENCIES) $(EXTRA_EchoClient_DEPENDENCIES) 
	@rm -f EchoClient$(EXEEXT)
	$(AM_V_CXXLD)$(EchoClient_LINK) $(EchoClient_OBJECTS) $(EchoClient_LDADD) $(LIBS)
src/examples/EchoServer1/$(am__dirstamp):
	@$(MKDIR_P) src/examples/EchoServer1
	@: > src/examples/EchoServer1/$(am__dirstamp)
src/examples/EchoServer1/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/examples/EchoServer1/$(DEPDIR)
	@: > src/examples/EchoServer1/$(DEPDIR)/$(am__dirstamp)
src/examples/EchoServer1/EchoServer1-EchoServer.$(OBJEXT):  \
	src/examples/EchoServer1/$(am__dirstamp) \
	src/examples/EchoServer1/$(DEPDIR)/$(am__dirstamp)
src/examples/EchoServer1/EchoServer1-main.$(OBJEXT):  \
	src/examples/EchoServer1/$(am__dirstamp) \
	src/examples/EchoServer1/$(DEPDIR)/$(am__dirstamp)

EchoServer1$(EXEEXT): $(EchoServer1_OBJECTS) $(EchoServer1_DEPENDENCIES) $(EXTRA_EchoServer1_DEPENDENCIES) 
	@rm -f EchoServer1$(EXEEXT)
	$(AM_V_CXXLD)$(EchoServer1_LINK) $(EchoServer1_OBJECTS) $(EchoServer1_LDADD) $(LIBS)
src/examples/EchoServer2/$(am__dirstamp):
	@$(MKDIR_P) src/examples/EchoServer2
	@: > src/examples/EchoServer2/$(am__dirstamp)
src/examples/EchoServer2/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/examples/EchoServer2/$(DEPDIR)
	@: > src/examples/EchoServer2/$(DEPDIR)/$(am__dirstamp)
src/examples/EchoServer2/EchoServer2-main.$(OBJEXT):  \
	src/examples/EchoServer2/$(am__dirstamp) \
	src/examples/EchoServer2/$(DEPDIR)/$(am__dirstamp)
src/examples/EchoServer1/EchoServer2-EchoServer.$(OBJEXT):  \
	src/examples/EchoServer1/$(am__dirstamp) \
	src/examples/EchoServer1/$(DEPDIR)/$(am__dirstamp)

EchoServer2$(EXEEXT): $(EchoServer2_OBJECTS) $(EchoServer2_DEPENDENCIES) $(EXTRA_EchoServer2_DEPENDENCIES) 
	@rm -f EchoServer2$(EXEEXT)
	$(AM_V_CXXLD)$(EchoServer2_LINK) $(EchoServer2_OBJECTS) $(EchoServer2_LDADD) $(LIBS)
src/examples/SeqPacketEchoClient/$(am__dirstamp):
	@$(MKDIR_P) src/examples/SeqPacketEchoClient
	@: > src/examples/SeqPacketEchoClient/$(am__dirstamp)
src/examples/SeqPacketEchoClient/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/examples/SeqPacketEchoClient/$(DEPDIR)
	@: > src/examples/SeqPacketEchoClient/$(DEPDIR)/$(am__dirstamp)
src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.$(OBJEXT):  \
	src/examples/SeqPacketEchoClient/$(am__dirstamp) \
	src/examples/SeqPacketEchoClient/$(DEPDIR)/$(am__dirstamp)

SeqPacketEchoClient$(EXEEXT): $(SeqPacketEchoClient_OBJECTS) $(SeqPacketEchoClient_DEPENDENCIES) $(EXTRA_SeqPacketEchoClient_DEPENDENCIES) 
	@rm -f SeqPacketEchoClient$(EXEEXT)
	$(AM_V_CXXLD)$(SeqPacketEchoClient_LINK) $(SeqPacketEchoClient_OBJECTS) $(SeqPacketEchoClient_LDADD) $(LIBS)
src/examples/SeqPacketEchoServer/$(am__dirstamp):
	@$(MKDIR_P) src/examples/SeqPacketEchoServer
	@: > src/examples/SeqPacketEchoServer/$(am__dirstamp)
src/examples/SeqPacketEchoServer/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/examples/SeqPacketEchoServer/$(DEPDIR)
	@: > src/examples/SeqPacketEchoServer/$(DEPDIR)/$(am__dirstamp)
src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.$(OBJEXT):  \
	src/examples/SeqPacketEchoServer/$(am__dirstamp) \
	src/examples/SeqPacketEchoServer/$(DEPDIR)/$(am__dirstamp)

SeqPacketEchoServer$(EXEEXT): $(SeqPacketEchoServer_OBJECTS) $(SeqPacketEchoServer_DEPENDENCIES) $(EXTRA_SeqPacketEchoServer_DEPENDENCIES) 
	@rm -f SeqPacketEchoServer$(EXEEXT)
	$(AM_V_CXXLD)$(SeqPacketEchoServer_LINK) $(SeqPacketEchoServer_OBJECTS) $(SeqPacketEchoServer_LDADD) $(LIBS)
3rdparty/gmock/gtest/src/$(am__dirstamp):
	@$(MKDIR_P) 3rdparty/gmock/gtest/src
	@: > 3rdparty/gmock/gtest/src/$(am__dirstamp)
3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) 3rdparty/gmock/gtest/src/$(DEPDIR)
	@: > 3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/gtest/src/testrunner-gtest.$(OBJEXT):  \
	3rdparty/gmock/gtest/src/$(am__dirstamp) \
	3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/gtest/src/testrunner-gtest-death-test.$(OBJEXT):  \
	3rdparty/gmock/gtest/src/$(am__dirstamp) \
	3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/gtest/src/testrunner-gtest-filepath.$(OBJEXT):  \
	3rdparty/gmock/gtest/src/$(am__dirstamp) \
	3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/gtest/src/testrunner-gtest-port.$(OBJEXT):  \
	3rdparty/gmock/gtest/src/$(am__dirstamp) \
	3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/gtest/src/testrunner-gtest-printers.$(OBJEXT):  \
	3rdparty/gmock/gtest/src/$(am__dirstamp) \
	3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/gtest/src/testrunner-gtest-test-part.$(OBJEXT):  \
	3rdparty/gmock/gtest/src/$(am__dirstamp) \
	3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.$(OBJEXT):  \
	3rdparty/gmock/gtest/src/$(am__dirstamp) \
	3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/src/$(am__dirstamp):
	@$(MKDIR_P) 3rdparty/gmock/src
	@: > 3rdparty/gmock/src/$(am__dirstamp)
3rdparty/gmock/src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) 3rdparty/gmock/src/$(DEPDIR)
	@: > 3rdparty/gmock/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/src/testrunner-gmock-cardinalities.$(OBJEXT):  \
	3rdparty/gmock/src/$(am__dirstamp) \
	3rdparty/gmock/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/src/testrunner-gmock.$(OBJEXT):  \
	3rdparty/gmock/src/$(am__dirstamp) \
	3rdparty/gmock/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/src/testrunner-gmock-internal-utils.$(OBJEXT):  \
	3rdparty/gmock/src/$(am__dirstamp) \
	3rdparty/gmock/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/src/testrunner-gmock-matchers.$(OBJEXT):  \
	3rdparty/gmock/src/$(am__dirstamp) \
	3rdparty/gmock/src/$(DEPDIR)/$(am__dirstamp)
3rdparty/gmock/src/testrunner-gmock-spec-builders.$(OBJEXT):  \
	3rdparty/gmock/src/$(am__dirstamp) \
	3rdparty/gmock/src/$(DEPDIR)/$(am__dirstamp)
tst/$(am__dirstamp):
	@$(MKDIR_P) tst
	@: > tst/$(am__dirstamp)
tst/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tst/$(DEPDIR)
	@: > tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-AsyncRunnerTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-BaseEpollRunnerTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-CallbackQueueTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-CalleeTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-ChildProcessTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-ControlMessageTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-DumpCreatorTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-DumpFormatterTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-DumpTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-DumpUtilsTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-EpollRunnerTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-EpollRunnerWithoutSignalsTest.$(OBJEXT):  \
	tst/$(am__dirstamp) tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-EpollRunnerWithSignalsTest.$(OBJEXT):  \
	tst/$(am__dirstamp) tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-EpollTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-ExceptionTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-FDListenerMapTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-FDListenerTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-FDMonitorTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-FileDescriptorTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-ListeningSocketTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-main.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-PostponeDeletionTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-RunnerTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-SeqPacketSocketMock.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-SeqPacketSocketTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-SignalSetTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-SocketAddressTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-StreamBufferTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-StreamSocketTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-SystemExceptionTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-SystemTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-TimerQueueTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-TimerTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-TypeNameTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-UncaughtExceptionHandlerTest.$(OBJEXT):  \
	tst/$(am__dirstamp) tst/$(DEPDIR)/$(am__dirstamp)
tst/testrunner-WeakCallbackTest.$(OBJEXT): tst/$(am__dirstamp) \
	tst/$(DEPDIR)/$(am__dirstamp)

testrunner$(EXEEXT): $(testrunner_OBJECTS) $(testrunner_DEPENDENCIES) $(EXTRA_testrunner_DEPENDENCIES) 
	@rm -f testrunner$(EXEEXT)
	$(AM_V_CXXLD)$(testrunner_LINK) $(testrunner_OBJECTS) $(testrunner_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f 3rdparty/gmock/gtest/src/*.$(OBJEXT)
	-rm -f 3rdparty/gmock/src/*.$(OBJEXT)
	-rm -f src/examples/EchoClient/*.$(OBJEXT)
	-rm -f src/examples/EchoServer1/*.$(OBJEXT)
	-rm -f src/examples/EchoServer2/*.$(OBJEXT)
	-rm -f src/examples/SeqPacketEchoClient/*.$(OBJEXT)
	-rm -f src/examples/SeqPacketEchoServer/*.$(OBJEXT)
	-rm -f src/lib/*.$(OBJEXT)
	-rm -f src/lib/*.lo
	-rm -f tst/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-death-test.Po
include 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-filepath.Po
include 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-port.Po
include 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-printers.Po
include 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-test-part.Po
include 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-typed-test.Po
include 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest.Po
include 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-cardinalities.Po
include 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-internal-utils.Po
include 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-matchers.Po
include 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-spec-builders.Po
include 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock.Po
include src/examples/EchoClient/$(DEPDIR)/EchoClient-main.Po
include src/examples/EchoServer1/$(DEPDIR)/EchoServer1-EchoServer.Po
include src/examples/EchoServer1/$(DEPDIR)/EchoServer1-main.Po
include src/examples/EchoServer1/$(DEPDIR)/EchoServer2-EchoServer.Po
include src/examples/EchoServer2/$(DEPDIR)/EchoServer2-main.Po
include src/examples/SeqPacketEchoClient/$(DEPDIR)/SeqPacketEchoClient-main.Po
include src/examples/SeqPacketEchoServer/$(DEPDIR)/SeqPacketEchoServer-main.Po
include src/lib/$(DEPDIR)/libEventLoop_la-Abort.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-AsyncRunner.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-BaseEpollRunner.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-CallbackQueue.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-Callee.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-ChildProcess.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-ControlMessage.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-DumpCreator.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-DumpFormatter.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-DumpUtils.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-Epoll.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-EpollRunner.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-FDListener.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-FDListenerMap.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-FDMonitor.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-FileDescriptor.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-ListeningSocket.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-MockableRunner.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-Runner.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-SeqPacketSocket.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-SigPipeSuppressor.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-SignalSet.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-SocketAddress.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-StreamBuffer.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-StreamSocket.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-System.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-SystemException.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-Timer.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-TimerQueue.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-TypeName.Plo
include src/lib/$(DEPDIR)/libEventLoop_la-UncaughtExceptionHandler.Plo
include tst/$(DEPDIR)/testrunner-AsyncRunnerTest.Po
include tst/$(DEPDIR)/testrunner-BaseEpollRunnerTest.Po
include tst/$(DEPDIR)/testrunner-CallbackQueueTest.Po
include tst/$(DEPDIR)/testrunner-CalleeTest.Po
include tst/$(DEPDIR)/testrunner-ChildProcessTest.Po
include tst/$(DEPDIR)/testrunner-ControlMessageTest.Po
include tst/$(DEPDIR)/testrunner-DumpCreatorTest.Po
include tst/$(DEPDIR)/testrunner-DumpFormatterTest.Po
include tst/$(DEPDIR)/testrunner-DumpTest.Po
include tst/$(DEPDIR)/testrunner-DumpUtilsTest.Po
include tst/$(DEPDIR)/testrunner-EpollRunnerTest.Po
include tst/$(DEPDIR)/testrunner-EpollRunnerWithSignalsTest.Po
include tst/$(DEPDIR)/testrunner-EpollRunnerWithoutSignalsTest.Po
include tst/$(DEPDIR)/testrunner-EpollTest.Po
include tst/$(DEPDIR)/testrunner-ExceptionTest.Po
include tst/$(DEPDIR)/testrunner-FDListenerMapTest.Po
include tst/$(DEPDIR)/testrunner-FDListenerTest.Po
include tst/$(DEPDIR)/testrunner-FDMonitorTest.Po
include tst/$(DEPDIR)/testrunner-FileDescriptorTest.Po
include tst/$(DEPDIR)/testrunner-ListeningSocketTest.Po
include tst/$(DEPDIR)/testrunner-PostponeDeletionTest.Po
include tst/$(DEPDIR)/testrunner-RunnerTest.Po
include tst/$(DEPDIR)/testrunner-SeqPacketSocketMock.Po
include tst/$(DEPDIR)/testrunner-SeqPacketSocketTest.Po
include tst/$(DEPDIR)/testrunner-SignalSetTest.Po
include tst/$(DEPDIR)/testrunner-SocketAddressTest.Po
include tst/$(DEPDIR)/testrunner-StreamBufferTest.Po
include tst/$(DEPDIR)/testrunner-StreamSocketTest.Po
include tst/$(DEPDIR)/testrunner-SystemExceptionTest.Po
include tst/$(DEPDIR)/testrunner-SystemTest.Po
include tst/$(DEPDIR)/testrunner-TimerQueueTest.Po
include tst/$(DEPDIR)/testrunner-TimerTest.Po
include tst/$(DEPDIR)/testrunner-TypeNameTest.Po
include tst/$(DEPDIR)/testrunner-UncaughtExceptionHandlerTest.Po
include tst/$(DEPDIR)/testrunner-WeakCallbackTest.Po
include tst/$(DEPDIR)/testrunner-main.Po

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

src/lib/libEventLoop_la-Abort.lo: src/lib/Abort.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-Abort.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-Abort.Tpo -c -o src/lib/libEventLoop_la-Abort.lo `test -f 'src/lib/Abort.cpp' || echo '$(srcdir)/'`src/lib/Abort.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-Abort.Tpo src/lib/$(DEPDIR)/libEventLoop_la-Abort.Plo
#	$(AM_V_CXX)source='src/lib/Abort.cpp' object='src/lib/libEventLoop_la-Abort.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-Abort.lo `test -f 'src/lib/Abort.cpp' || echo '$(srcdir)/'`src/lib/Abort.cpp

src/lib/libEventLoop_la-AsyncRunner.lo: src/lib/AsyncRunner.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-AsyncRunner.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-AsyncRunner.Tpo -c -o src/lib/libEventLoop_la-AsyncRunner.lo `test -f 'src/lib/AsyncRunner.cpp' || echo '$(srcdir)/'`src/lib/AsyncRunner.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-AsyncRunner.Tpo src/lib/$(DEPDIR)/libEventLoop_la-AsyncRunner.Plo
#	$(AM_V_CXX)source='src/lib/AsyncRunner.cpp' object='src/lib/libEventLoop_la-AsyncRunner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-AsyncRunner.lo `test -f 'src/lib/AsyncRunner.cpp' || echo '$(srcdir)/'`src/lib/AsyncRunner.cpp

src/lib/libEventLoop_la-BaseEpollRunner.lo: src/lib/BaseEpollRunner.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-BaseEpollRunner.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-BaseEpollRunner.Tpo -c -o src/lib/libEventLoop_la-BaseEpollRunner.lo `test -f 'src/lib/BaseEpollRunner.cpp' || echo '$(srcdir)/'`src/lib/BaseEpollRunner.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-BaseEpollRunner.Tpo src/lib/$(DEPDIR)/libEventLoop_la-BaseEpollRunner.Plo
#	$(AM_V_CXX)source='src/lib/BaseEpollRunner.cpp' object='src/lib/libEventLoop_la-BaseEpollRunner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-BaseEpollRunner.lo `test -f 'src/lib/BaseEpollRunner.cpp' || echo '$(srcdir)/'`src/lib/BaseEpollRunner.cpp

src/lib/libEventLoop_la-CallbackQueue.lo: src/lib/CallbackQueue.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-CallbackQueue.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-CallbackQueue.Tpo -c -o src/lib/libEventLoop_la-CallbackQueue.lo `test -f 'src/lib/CallbackQueue.cpp' || echo '$(srcdir)/'`src/lib/CallbackQueue.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-CallbackQueue.Tpo src/lib/$(DEPDIR)/libEventLoop_la-CallbackQueue.Plo
#	$(AM_V_CXX)source='src/lib/CallbackQueue.cpp' object='src/lib/libEventLoop_la-CallbackQueue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-CallbackQueue.lo `test -f 'src/lib/CallbackQueue.cpp' || echo '$(srcdir)/'`src/lib/CallbackQueue.cpp

src/lib/libEventLoop_la-Callee.lo: src/lib/Callee.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-Callee.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-Callee.Tpo -c -o src/lib/libEventLoop_la-Callee.lo `test -f 'src/lib/Callee.cpp' || echo '$(srcdir)/'`src/lib/Callee.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-Callee.Tpo src/lib/$(DEPDIR)/libEventLoop_la-Callee.Plo
#	$(AM_V_CXX)source='src/lib/Callee.cpp' object='src/lib/libEventLoop_la-Callee.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-Callee.lo `test -f 'src/lib/Callee.cpp' || echo '$(srcdir)/'`src/lib/Callee.cpp

src/lib/libEventLoop_la-ChildProcess.lo: src/lib/ChildProcess.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-ChildProcess.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-ChildProcess.Tpo -c -o src/lib/libEventLoop_la-ChildProcess.lo `test -f 'src/lib/ChildProcess.cpp' || echo '$(srcdir)/'`src/lib/ChildProcess.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-ChildProcess.Tpo src/lib/$(DEPDIR)/libEventLoop_la-ChildProcess.Plo
#	$(AM_V_CXX)source='src/lib/ChildProcess.cpp' object='src/lib/libEventLoop_la-ChildProcess.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-ChildProcess.lo `test -f 'src/lib/ChildProcess.cpp' || echo '$(srcdir)/'`src/lib/ChildProcess.cpp

src/lib/libEventLoop_la-ControlMessage.lo: src/lib/ControlMessage.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-ControlMessage.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-ControlMessage.Tpo -c -o src/lib/libEventLoop_la-ControlMessage.lo `test -f 'src/lib/ControlMessage.cpp' || echo '$(srcdir)/'`src/lib/ControlMessage.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-ControlMessage.Tpo src/lib/$(DEPDIR)/libEventLoop_la-ControlMessage.Plo
#	$(AM_V_CXX)source='src/lib/ControlMessage.cpp' object='src/lib/libEventLoop_la-ControlMessage.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-ControlMessage.lo `test -f 'src/lib/ControlMessage.cpp' || echo '$(srcdir)/'`src/lib/ControlMessage.cpp

src/lib/libEventLoop_la-DumpCreator.lo: src/lib/DumpCreator.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-DumpCreator.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-DumpCreator.Tpo -c -o src/lib/libEventLoop_la-DumpCreator.lo `test -f 'src/lib/DumpCreator.cpp' || echo '$(srcdir)/'`src/lib/DumpCreator.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-DumpCreator.Tpo src/lib/$(DEPDIR)/libEventLoop_la-DumpCreator.Plo
#	$(AM_V_CXX)source='src/lib/DumpCreator.cpp' object='src/lib/libEventLoop_la-DumpCreator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-DumpCreator.lo `test -f 'src/lib/DumpCreator.cpp' || echo '$(srcdir)/'`src/lib/DumpCreator.cpp

src/lib/libEventLoop_la-DumpFormatter.lo: src/lib/DumpFormatter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-DumpFormatter.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-DumpFormatter.Tpo -c -o src/lib/libEventLoop_la-DumpFormatter.lo `test -f 'src/lib/DumpFormatter.cpp' || echo '$(srcdir)/'`src/lib/DumpFormatter.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-DumpFormatter.Tpo src/lib/$(DEPDIR)/libEventLoop_la-DumpFormatter.Plo
#	$(AM_V_CXX)source='src/lib/DumpFormatter.cpp' object='src/lib/libEventLoop_la-DumpFormatter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-DumpFormatter.lo `test -f 'src/lib/DumpFormatter.cpp' || echo '$(srcdir)/'`src/lib/DumpFormatter.cpp

src/lib/libEventLoop_la-DumpUtils.lo: src/lib/DumpUtils.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-DumpUtils.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-DumpUtils.Tpo -c -o src/lib/libEventLoop_la-DumpUtils.lo `test -f 'src/lib/DumpUtils.cpp' || echo '$(srcdir)/'`src/lib/DumpUtils.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-DumpUtils.Tpo src/lib/$(DEPDIR)/libEventLoop_la-DumpUtils.Plo
#	$(AM_V_CXX)source='src/lib/DumpUtils.cpp' object='src/lib/libEventLoop_la-DumpUtils.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-DumpUtils.lo `test -f 'src/lib/DumpUtils.cpp' || echo '$(srcdir)/'`src/lib/DumpUtils.cpp

src/lib/libEventLoop_la-Epoll.lo: src/lib/Epoll.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-Epoll.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-Epoll.Tpo -c -o src/lib/libEventLoop_la-Epoll.lo `test -f 'src/lib/Epoll.cpp' || echo '$(srcdir)/'`src/lib/Epoll.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-Epoll.Tpo src/lib/$(DEPDIR)/libEventLoop_la-Epoll.Plo
#	$(AM_V_CXX)source='src/lib/Epoll.cpp' object='src/lib/libEventLoop_la-Epoll.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-Epoll.lo `test -f 'src/lib/Epoll.cpp' || echo '$(srcdir)/'`src/lib/Epoll.cpp

src/lib/libEventLoop_la-EpollRunner.lo: src/lib/EpollRunner.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-EpollRunner.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-EpollRunner.Tpo -c -o src/lib/libEventLoop_la-EpollRunner.lo `test -f 'src/lib/EpollRunner.cpp' || echo '$(srcdir)/'`src/lib/EpollRunner.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-EpollRunner.Tpo src/lib/$(DEPDIR)/libEventLoop_la-EpollRunner.Plo
#	$(AM_V_CXX)source='src/lib/EpollRunner.cpp' object='src/lib/libEventLoop_la-EpollRunner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-EpollRunner.lo `test -f 'src/lib/EpollRunner.cpp' || echo '$(srcdir)/'`src/lib/EpollRunner.cpp

src/lib/libEventLoop_la-FDListener.lo: src/lib/FDListener.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-FDListener.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-FDListener.Tpo -c -o src/lib/libEventLoop_la-FDListener.lo `test -f 'src/lib/FDListener.cpp' || echo '$(srcdir)/'`src/lib/FDListener.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-FDListener.Tpo src/lib/$(DEPDIR)/libEventLoop_la-FDListener.Plo
#	$(AM_V_CXX)source='src/lib/FDListener.cpp' object='src/lib/libEventLoop_la-FDListener.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-FDListener.lo `test -f 'src/lib/FDListener.cpp' || echo '$(srcdir)/'`src/lib/FDListener.cpp

src/lib/libEventLoop_la-FDListenerMap.lo: src/lib/FDListenerMap.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-FDListenerMap.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-FDListenerMap.Tpo -c -o src/lib/libEventLoop_la-FDListenerMap.lo `test -f 'src/lib/FDListenerMap.cpp' || echo '$(srcdir)/'`src/lib/FDListenerMap.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-FDListenerMap.Tpo src/lib/$(DEPDIR)/libEventLoop_la-FDListenerMap.Plo
#	$(AM_V_CXX)source='src/lib/FDListenerMap.cpp' object='src/lib/libEventLoop_la-FDListenerMap.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-FDListenerMap.lo `test -f 'src/lib/FDListenerMap.cpp' || echo '$(srcdir)/'`src/lib/FDListenerMap.cpp

src/lib/libEventLoop_la-FDMonitor.lo: src/lib/FDMonitor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-FDMonitor.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-FDMonitor.Tpo -c -o src/lib/libEventLoop_la-FDMonitor.lo `test -f 'src/lib/FDMonitor.cpp' || echo '$(srcdir)/'`src/lib/FDMonitor.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-FDMonitor.Tpo src/lib/$(DEPDIR)/libEventLoop_la-FDMonitor.Plo
#	$(AM_V_CXX)source='src/lib/FDMonitor.cpp' object='src/lib/libEventLoop_la-FDMonitor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-FDMonitor.lo `test -f 'src/lib/FDMonitor.cpp' || echo '$(srcdir)/'`src/lib/FDMonitor.cpp

src/lib/libEventLoop_la-FileDescriptor.lo: src/lib/FileDescriptor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-FileDescriptor.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-FileDescriptor.Tpo -c -o src/lib/libEventLoop_la-FileDescriptor.lo `test -f 'src/lib/FileDescriptor.cpp' || echo '$(srcdir)/'`src/lib/FileDescriptor.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-FileDescriptor.Tpo src/lib/$(DEPDIR)/libEventLoop_la-FileDescriptor.Plo
#	$(AM_V_CXX)source='src/lib/FileDescriptor.cpp' object='src/lib/libEventLoop_la-FileDescriptor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-FileDescriptor.lo `test -f 'src/lib/FileDescriptor.cpp' || echo '$(srcdir)/'`src/lib/FileDescriptor.cpp

src/lib/libEventLoop_la-ListeningSocket.lo: src/lib/ListeningSocket.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-ListeningSocket.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-ListeningSocket.Tpo -c -o src/lib/libEventLoop_la-ListeningSocket.lo `test -f 'src/lib/ListeningSocket.cpp' || echo '$(srcdir)/'`src/lib/ListeningSocket.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-ListeningSocket.Tpo src/lib/$(DEPDIR)/libEventLoop_la-ListeningSocket.Plo
#	$(AM_V_CXX)source='src/lib/ListeningSocket.cpp' object='src/lib/libEventLoop_la-ListeningSocket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-ListeningSocket.lo `test -f 'src/lib/ListeningSocket.cpp' || echo '$(srcdir)/'`src/lib/ListeningSocket.cpp

src/lib/libEventLoop_la-MockableRunner.lo: src/lib/MockableRunner.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-MockableRunner.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-MockableRunner.Tpo -c -o src/lib/libEventLoop_la-MockableRunner.lo `test -f 'src/lib/MockableRunner.cpp' || echo '$(srcdir)/'`src/lib/MockableRunner.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-MockableRunner.Tpo src/lib/$(DEPDIR)/libEventLoop_la-MockableRunner.Plo
#	$(AM_V_CXX)source='src/lib/MockableRunner.cpp' object='src/lib/libEventLoop_la-MockableRunner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-MockableRunner.lo `test -f 'src/lib/MockableRunner.cpp' || echo '$(srcdir)/'`src/lib/MockableRunner.cpp

src/lib/libEventLoop_la-Runner.lo: src/lib/Runner.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-Runner.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-Runner.Tpo -c -o src/lib/libEventLoop_la-Runner.lo `test -f 'src/lib/Runner.cpp' || echo '$(srcdir)/'`src/lib/Runner.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-Runner.Tpo src/lib/$(DEPDIR)/libEventLoop_la-Runner.Plo
#	$(AM_V_CXX)source='src/lib/Runner.cpp' object='src/lib/libEventLoop_la-Runner.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-Runner.lo `test -f 'src/lib/Runner.cpp' || echo '$(srcdir)/'`src/lib/Runner.cpp

src/lib/libEventLoop_la-SeqPacketSocket.lo: src/lib/SeqPacketSocket.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-SeqPacketSocket.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-SeqPacketSocket.Tpo -c -o src/lib/libEventLoop_la-SeqPacketSocket.lo `test -f 'src/lib/SeqPacketSocket.cpp' || echo '$(srcdir)/'`src/lib/SeqPacketSocket.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-SeqPacketSocket.Tpo src/lib/$(DEPDIR)/libEventLoop_la-SeqPacketSocket.Plo
#	$(AM_V_CXX)source='src/lib/SeqPacketSocket.cpp' object='src/lib/libEventLoop_la-SeqPacketSocket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-SeqPacketSocket.lo `test -f 'src/lib/SeqPacketSocket.cpp' || echo '$(srcdir)/'`src/lib/SeqPacketSocket.cpp

src/lib/libEventLoop_la-SignalSet.lo: src/lib/SignalSet.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-SignalSet.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-SignalSet.Tpo -c -o src/lib/libEventLoop_la-SignalSet.lo `test -f 'src/lib/SignalSet.cpp' || echo '$(srcdir)/'`src/lib/SignalSet.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-SignalSet.Tpo src/lib/$(DEPDIR)/libEventLoop_la-SignalSet.Plo
#	$(AM_V_CXX)source='src/lib/SignalSet.cpp' object='src/lib/libEventLoop_la-SignalSet.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-SignalSet.lo `test -f 'src/lib/SignalSet.cpp' || echo '$(srcdir)/'`src/lib/SignalSet.cpp

src/lib/libEventLoop_la-SigPipeSuppressor.lo: src/lib/SigPipeSuppressor.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-SigPipeSuppressor.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-SigPipeSuppressor.Tpo -c -o src/lib/libEventLoop_la-SigPipeSuppressor.lo `test -f 'src/lib/SigPipeSuppressor.cpp' || echo '$(srcdir)/'`src/lib/SigPipeSuppressor.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-SigPipeSuppressor.Tpo src/lib/$(DEPDIR)/libEventLoop_la-SigPipeSuppressor.Plo
#	$(AM_V_CXX)source='src/lib/SigPipeSuppressor.cpp' object='src/lib/libEventLoop_la-SigPipeSuppressor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-SigPipeSuppressor.lo `test -f 'src/lib/SigPipeSuppressor.cpp' || echo '$(srcdir)/'`src/lib/SigPipeSuppressor.cpp

src/lib/libEventLoop_la-SocketAddress.lo: src/lib/SocketAddress.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-SocketAddress.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-SocketAddress.Tpo -c -o src/lib/libEventLoop_la-SocketAddress.lo `test -f 'src/lib/SocketAddress.cpp' || echo '$(srcdir)/'`src/lib/SocketAddress.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-SocketAddress.Tpo src/lib/$(DEPDIR)/libEventLoop_la-SocketAddress.Plo
#	$(AM_V_CXX)source='src/lib/SocketAddress.cpp' object='src/lib/libEventLoop_la-SocketAddress.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-SocketAddress.lo `test -f 'src/lib/SocketAddress.cpp' || echo '$(srcdir)/'`src/lib/SocketAddress.cpp

src/lib/libEventLoop_la-StreamBuffer.lo: src/lib/StreamBuffer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-StreamBuffer.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-StreamBuffer.Tpo -c -o src/lib/libEventLoop_la-StreamBuffer.lo `test -f 'src/lib/StreamBuffer.cpp' || echo '$(srcdir)/'`src/lib/StreamBuffer.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-StreamBuffer.Tpo src/lib/$(DEPDIR)/libEventLoop_la-StreamBuffer.Plo
#	$(AM_V_CXX)source='src/lib/StreamBuffer.cpp' object='src/lib/libEventLoop_la-StreamBuffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-StreamBuffer.lo `test -f 'src/lib/StreamBuffer.cpp' || echo '$(srcdir)/'`src/lib/StreamBuffer.cpp

src/lib/libEventLoop_la-StreamSocket.lo: src/lib/StreamSocket.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-StreamSocket.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-StreamSocket.Tpo -c -o src/lib/libEventLoop_la-StreamSocket.lo `test -f 'src/lib/StreamSocket.cpp' || echo '$(srcdir)/'`src/lib/StreamSocket.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-StreamSocket.Tpo src/lib/$(DEPDIR)/libEventLoop_la-StreamSocket.Plo
#	$(AM_V_CXX)source='src/lib/StreamSocket.cpp' object='src/lib/libEventLoop_la-StreamSocket.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-StreamSocket.lo `test -f 'src/lib/StreamSocket.cpp' || echo '$(srcdir)/'`src/lib/StreamSocket.cpp

src/lib/libEventLoop_la-System.lo: src/lib/System.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-System.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-System.Tpo -c -o src/lib/libEventLoop_la-System.lo `test -f 'src/lib/System.cpp' || echo '$(srcdir)/'`src/lib/System.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-System.Tpo src/lib/$(DEPDIR)/libEventLoop_la-System.Plo
#	$(AM_V_CXX)source='src/lib/System.cpp' object='src/lib/libEventLoop_la-System.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-System.lo `test -f 'src/lib/System.cpp' || echo '$(srcdir)/'`src/lib/System.cpp

src/lib/libEventLoop_la-SystemException.lo: src/lib/SystemException.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-SystemException.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-SystemException.Tpo -c -o src/lib/libEventLoop_la-SystemException.lo `test -f 'src/lib/SystemException.cpp' || echo '$(srcdir)/'`src/lib/SystemException.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-SystemException.Tpo src/lib/$(DEPDIR)/libEventLoop_la-SystemException.Plo
#	$(AM_V_CXX)source='src/lib/SystemException.cpp' object='src/lib/libEventLoop_la-SystemException.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-SystemException.lo `test -f 'src/lib/SystemException.cpp' || echo '$(srcdir)/'`src/lib/SystemException.cpp

src/lib/libEventLoop_la-Timer.lo: src/lib/Timer.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-Timer.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-Timer.Tpo -c -o src/lib/libEventLoop_la-Timer.lo `test -f 'src/lib/Timer.cpp' || echo '$(srcdir)/'`src/lib/Timer.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-Timer.Tpo src/lib/$(DEPDIR)/libEventLoop_la-Timer.Plo
#	$(AM_V_CXX)source='src/lib/Timer.cpp' object='src/lib/libEventLoop_la-Timer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-Timer.lo `test -f 'src/lib/Timer.cpp' || echo '$(srcdir)/'`src/lib/Timer.cpp

src/lib/libEventLoop_la-TimerQueue.lo: src/lib/TimerQueue.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-TimerQueue.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-TimerQueue.Tpo -c -o src/lib/libEventLoop_la-TimerQueue.lo `test -f 'src/lib/TimerQueue.cpp' || echo '$(srcdir)/'`src/lib/TimerQueue.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-TimerQueue.Tpo src/lib/$(DEPDIR)/libEventLoop_la-TimerQueue.Plo
#	$(AM_V_CXX)source='src/lib/TimerQueue.cpp' object='src/lib/libEventLoop_la-TimerQueue.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-TimerQueue.lo `test -f 'src/lib/TimerQueue.cpp' || echo '$(srcdir)/'`src/lib/TimerQueue.cpp

src/lib/libEventLoop_la-TypeName.lo: src/lib/TypeName.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-TypeName.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-TypeName.Tpo -c -o src/lib/libEventLoop_la-TypeName.lo `test -f 'src/lib/TypeName.cpp' || echo '$(srcdir)/'`src/lib/TypeName.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-TypeName.Tpo src/lib/$(DEPDIR)/libEventLoop_la-TypeName.Plo
#	$(AM_V_CXX)source='src/lib/TypeName.cpp' object='src/lib/libEventLoop_la-TypeName.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-TypeName.lo `test -f 'src/lib/TypeName.cpp' || echo '$(srcdir)/'`src/lib/TypeName.cpp

src/lib/libEventLoop_la-UncaughtExceptionHandler.lo: src/lib/UncaughtExceptionHandler.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/lib/libEventLoop_la-UncaughtExceptionHandler.lo -MD -MP -MF src/lib/$(DEPDIR)/libEventLoop_la-UncaughtExceptionHandler.Tpo -c -o src/lib/libEventLoop_la-UncaughtExceptionHandler.lo `test -f 'src/lib/UncaughtExceptionHandler.cpp' || echo '$(srcdir)/'`src/lib/UncaughtExceptionHandler.cpp
	$(AM_V_at)$(am__mv) src/lib/$(DEPDIR)/libEventLoop_la-UncaughtExceptionHandler.Tpo src/lib/$(DEPDIR)/libEventLoop_la-UncaughtExceptionHandler.Plo
#	$(AM_V_CXX)source='src/lib/UncaughtExceptionHandler.cpp' object='src/lib/libEventLoop_la-UncaughtExceptionHandler.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libEventLoop_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/lib/libEventLoop_la-UncaughtExceptionHandler.lo `test -f 'src/lib/UncaughtExceptionHandler.cpp' || echo '$(srcdir)/'`src/lib/UncaughtExceptionHandler.cpp

src/examples/EchoClient/EchoClient-main.o: src/examples/EchoClient/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoClient_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoClient/EchoClient-main.o -MD -MP -MF src/examples/EchoClient/$(DEPDIR)/EchoClient-main.Tpo -c -o src/examples/EchoClient/EchoClient-main.o `test -f 'src/examples/EchoClient/main.cpp' || echo '$(srcdir)/'`src/examples/EchoClient/main.cpp
	$(AM_V_at)$(am__mv) src/examples/EchoClient/$(DEPDIR)/EchoClient-main.Tpo src/examples/EchoClient/$(DEPDIR)/EchoClient-main.Po
#	$(AM_V_CXX)source='src/examples/EchoClient/main.cpp' object='src/examples/EchoClient/EchoClient-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoClient_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoClient/EchoClient-main.o `test -f 'src/examples/EchoClient/main.cpp' || echo '$(srcdir)/'`src/examples/EchoClient/main.cpp

src/examples/EchoClient/EchoClient-main.obj: src/examples/EchoClient/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoClient_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoClient/EchoClient-main.obj -MD -MP -MF src/examples/EchoClient/$(DEPDIR)/EchoClient-main.Tpo -c -o src/examples/EchoClient/EchoClient-main.obj `if test -f 'src/examples/EchoClient/main.cpp'; then $(CYGPATH_W) 'src/examples/EchoClient/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoClient/main.cpp'; fi`
	$(AM_V_at)$(am__mv) src/examples/EchoClient/$(DEPDIR)/EchoClient-main.Tpo src/examples/EchoClient/$(DEPDIR)/EchoClient-main.Po
#	$(AM_V_CXX)source='src/examples/EchoClient/main.cpp' object='src/examples/EchoClient/EchoClient-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoClient_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoClient/EchoClient-main.obj `if test -f 'src/examples/EchoClient/main.cpp'; then $(CYGPATH_W) 'src/examples/EchoClient/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoClient/main.cpp'; fi`

src/examples/EchoServer1/EchoServer1-EchoServer.o: src/examples/EchoServer1/EchoServer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoServer1/EchoServer1-EchoServer.o -MD -MP -MF src/examples/EchoServer1/$(DEPDIR)/EchoServer1-EchoServer.Tpo -c -o src/examples/EchoServer1/EchoServer1-EchoServer.o `test -f 'src/examples/EchoServer1/EchoServer.cpp' || echo '$(srcdir)/'`src/examples/EchoServer1/EchoServer.cpp
	$(AM_V_at)$(am__mv) src/examples/EchoServer1/$(DEPDIR)/EchoServer1-EchoServer.Tpo src/examples/EchoServer1/$(DEPDIR)/EchoServer1-EchoServer.Po
#	$(AM_V_CXX)source='src/examples/EchoServer1/EchoServer.cpp' object='src/examples/EchoServer1/EchoServer1-EchoServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoServer1/EchoServer1-EchoServer.o `test -f 'src/examples/EchoServer1/EchoServer.cpp' || echo '$(srcdir)/'`src/examples/EchoServer1/EchoServer.cpp

src/examples/EchoServer1/EchoServer1-EchoServer.obj: src/examples/EchoServer1/EchoServer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoServer1/EchoServer1-EchoServer.obj -MD -MP -MF src/examples/EchoServer1/$(DEPDIR)/EchoServer1-EchoServer.Tpo -c -o src/examples/EchoServer1/EchoServer1-EchoServer.obj `if test -f 'src/examples/EchoServer1/EchoServer.cpp'; then $(CYGPATH_W) 'src/examples/EchoServer1/EchoServer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoServer1/EchoServer.cpp'; fi`
	$(AM_V_at)$(am__mv) src/examples/EchoServer1/$(DEPDIR)/EchoServer1-EchoServer.Tpo src/examples/EchoServer1/$(DEPDIR)/EchoServer1-EchoServer.Po
#	$(AM_V_CXX)source='src/examples/EchoServer1/EchoServer.cpp' object='src/examples/EchoServer1/EchoServer1-EchoServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoServer1/EchoServer1-EchoServer.obj `if test -f 'src/examples/EchoServer1/EchoServer.cpp'; then $(CYGPATH_W) 'src/examples/EchoServer1/EchoServer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoServer1/EchoServer.cpp'; fi`

src/examples/EchoServer1/EchoServer1-main.o: src/examples/EchoServer1/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoServer1/EchoServer1-main.o -MD -MP -MF src/examples/EchoServer1/$(DEPDIR)/EchoServer1-main.Tpo -c -o src/examples/EchoServer1/EchoServer1-main.o `test -f 'src/examples/EchoServer1/main.cpp' || echo '$(srcdir)/'`src/examples/EchoServer1/main.cpp
	$(AM_V_at)$(am__mv) src/examples/EchoServer1/$(DEPDIR)/EchoServer1-main.Tpo src/examples/EchoServer1/$(DEPDIR)/EchoServer1-main.Po
#	$(AM_V_CXX)source='src/examples/EchoServer1/main.cpp' object='src/examples/EchoServer1/EchoServer1-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoServer1/EchoServer1-main.o `test -f 'src/examples/EchoServer1/main.cpp' || echo '$(srcdir)/'`src/examples/EchoServer1/main.cpp

src/examples/EchoServer1/EchoServer1-main.obj: src/examples/EchoServer1/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoServer1/EchoServer1-main.obj -MD -MP -MF src/examples/EchoServer1/$(DEPDIR)/EchoServer1-main.Tpo -c -o src/examples/EchoServer1/EchoServer1-main.obj `if test -f 'src/examples/EchoServer1/main.cpp'; then $(CYGPATH_W) 'src/examples/EchoServer1/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoServer1/main.cpp'; fi`
	$(AM_V_at)$(am__mv) src/examples/EchoServer1/$(DEPDIR)/EchoServer1-main.Tpo src/examples/EchoServer1/$(DEPDIR)/EchoServer1-main.Po
#	$(AM_V_CXX)source='src/examples/EchoServer1/main.cpp' object='src/examples/EchoServer1/EchoServer1-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer1_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoServer1/EchoServer1-main.obj `if test -f 'src/examples/EchoServer1/main.cpp'; then $(CYGPATH_W) 'src/examples/EchoServer1/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoServer1/main.cpp'; fi`

src/examples/EchoServer2/EchoServer2-main.o: src/examples/EchoServer2/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoServer2/EchoServer2-main.o -MD -MP -MF src/examples/EchoServer2/$(DEPDIR)/EchoServer2-main.Tpo -c -o src/examples/EchoServer2/EchoServer2-main.o `test -f 'src/examples/EchoServer2/main.cpp' || echo '$(srcdir)/'`src/examples/EchoServer2/main.cpp
	$(AM_V_at)$(am__mv) src/examples/EchoServer2/$(DEPDIR)/EchoServer2-main.Tpo src/examples/EchoServer2/$(DEPDIR)/EchoServer2-main.Po
#	$(AM_V_CXX)source='src/examples/EchoServer2/main.cpp' object='src/examples/EchoServer2/EchoServer2-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoServer2/EchoServer2-main.o `test -f 'src/examples/EchoServer2/main.cpp' || echo '$(srcdir)/'`src/examples/EchoServer2/main.cpp

src/examples/EchoServer2/EchoServer2-main.obj: src/examples/EchoServer2/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoServer2/EchoServer2-main.obj -MD -MP -MF src/examples/EchoServer2/$(DEPDIR)/EchoServer2-main.Tpo -c -o src/examples/EchoServer2/EchoServer2-main.obj `if test -f 'src/examples/EchoServer2/main.cpp'; then $(CYGPATH_W) 'src/examples/EchoServer2/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoServer2/main.cpp'; fi`
	$(AM_V_at)$(am__mv) src/examples/EchoServer2/$(DEPDIR)/EchoServer2-main.Tpo src/examples/EchoServer2/$(DEPDIR)/EchoServer2-main.Po
#	$(AM_V_CXX)source='src/examples/EchoServer2/main.cpp' object='src/examples/EchoServer2/EchoServer2-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoServer2/EchoServer2-main.obj `if test -f 'src/examples/EchoServer2/main.cpp'; then $(CYGPATH_W) 'src/examples/EchoServer2/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoServer2/main.cpp'; fi`

src/examples/EchoServer1/EchoServer2-EchoServer.o: src/examples/EchoServer1/EchoServer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoServer1/EchoServer2-EchoServer.o -MD -MP -MF src/examples/EchoServer1/$(DEPDIR)/EchoServer2-EchoServer.Tpo -c -o src/examples/EchoServer1/EchoServer2-EchoServer.o `test -f 'src/examples/EchoServer1/EchoServer.cpp' || echo '$(srcdir)/'`src/examples/EchoServer1/EchoServer.cpp
	$(AM_V_at)$(am__mv) src/examples/EchoServer1/$(DEPDIR)/EchoServer2-EchoServer.Tpo src/examples/EchoServer1/$(DEPDIR)/EchoServer2-EchoServer.Po
#	$(AM_V_CXX)source='src/examples/EchoServer1/EchoServer.cpp' object='src/examples/EchoServer1/EchoServer2-EchoServer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoServer1/EchoServer2-EchoServer.o `test -f 'src/examples/EchoServer1/EchoServer.cpp' || echo '$(srcdir)/'`src/examples/EchoServer1/EchoServer.cpp

src/examples/EchoServer1/EchoServer2-EchoServer.obj: src/examples/EchoServer1/EchoServer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/EchoServer1/EchoServer2-EchoServer.obj -MD -MP -MF src/examples/EchoServer1/$(DEPDIR)/EchoServer2-EchoServer.Tpo -c -o src/examples/EchoServer1/EchoServer2-EchoServer.obj `if test -f 'src/examples/EchoServer1/EchoServer.cpp'; then $(CYGPATH_W) 'src/examples/EchoServer1/EchoServer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoServer1/EchoServer.cpp'; fi`
	$(AM_V_at)$(am__mv) src/examples/EchoServer1/$(DEPDIR)/EchoServer2-EchoServer.Tpo src/examples/EchoServer1/$(DEPDIR)/EchoServer2-EchoServer.Po
#	$(AM_V_CXX)source='src/examples/EchoServer1/EchoServer.cpp' object='src/examples/EchoServer1/EchoServer2-EchoServer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(EchoServer2_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/EchoServer1/EchoServer2-EchoServer.obj `if test -f 'src/examples/EchoServer1/EchoServer.cpp'; then $(CYGPATH_W) 'src/examples/EchoServer1/EchoServer.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/EchoServer1/EchoServer.cpp'; fi`

src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.o: src/examples/SeqPacketEchoClient/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SeqPacketEchoClient_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.o -MD -MP -MF src/examples/SeqPacketEchoClient/$(DEPDIR)/SeqPacketEchoClient-main.Tpo -c -o src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.o `test -f 'src/examples/SeqPacketEchoClient/main.cpp' || echo '$(srcdir)/'`src/examples/SeqPacketEchoClient/main.cpp
	$(AM_V_at)$(am__mv) src/examples/SeqPacketEchoClient/$(DEPDIR)/SeqPacketEchoClient-main.Tpo src/examples/SeqPacketEchoClient/$(DEPDIR)/SeqPacketEchoClient-main.Po
#	$(AM_V_CXX)source='src/examples/SeqPacketEchoClient/main.cpp' object='src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SeqPacketEchoClient_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.o `test -f 'src/examples/SeqPacketEchoClient/main.cpp' || echo '$(srcdir)/'`src/examples/SeqPacketEchoClient/main.cpp

src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.obj: src/examples/SeqPacketEchoClient/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SeqPacketEchoClient_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.obj -MD -MP -MF src/examples/SeqPacketEchoClient/$(DEPDIR)/SeqPacketEchoClient-main.Tpo -c -o src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.obj `if test -f 'src/examples/SeqPacketEchoClient/main.cpp'; then $(CYGPATH_W) 'src/examples/SeqPacketEchoClient/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/SeqPacketEchoClient/main.cpp'; fi`
	$(AM_V_at)$(am__mv) src/examples/SeqPacketEchoClient/$(DEPDIR)/SeqPacketEchoClient-main.Tpo src/examples/SeqPacketEchoClient/$(DEPDIR)/SeqPacketEchoClient-main.Po
#	$(AM_V_CXX)source='src/examples/SeqPacketEchoClient/main.cpp' object='src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SeqPacketEchoClient_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/SeqPacketEchoClient/SeqPacketEchoClient-main.obj `if test -f 'src/examples/SeqPacketEchoClient/main.cpp'; then $(CYGPATH_W) 'src/examples/SeqPacketEchoClient/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/SeqPacketEchoClient/main.cpp'; fi`

src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.o: src/examples/SeqPacketEchoServer/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SeqPacketEchoServer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.o -MD -MP -MF src/examples/SeqPacketEchoServer/$(DEPDIR)/SeqPacketEchoServer-main.Tpo -c -o src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.o `test -f 'src/examples/SeqPacketEchoServer/main.cpp' || echo '$(srcdir)/'`src/examples/SeqPacketEchoServer/main.cpp
	$(AM_V_at)$(am__mv) src/examples/SeqPacketEchoServer/$(DEPDIR)/SeqPacketEchoServer-main.Tpo src/examples/SeqPacketEchoServer/$(DEPDIR)/SeqPacketEchoServer-main.Po
#	$(AM_V_CXX)source='src/examples/SeqPacketEchoServer/main.cpp' object='src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SeqPacketEchoServer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.o `test -f 'src/examples/SeqPacketEchoServer/main.cpp' || echo '$(srcdir)/'`src/examples/SeqPacketEchoServer/main.cpp

src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.obj: src/examples/SeqPacketEchoServer/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SeqPacketEchoServer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.obj -MD -MP -MF src/examples/SeqPacketEchoServer/$(DEPDIR)/SeqPacketEchoServer-main.Tpo -c -o src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.obj `if test -f 'src/examples/SeqPacketEchoServer/main.cpp'; then $(CYGPATH_W) 'src/examples/SeqPacketEchoServer/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/SeqPacketEchoServer/main.cpp'; fi`
	$(AM_V_at)$(am__mv) src/examples/SeqPacketEchoServer/$(DEPDIR)/SeqPacketEchoServer-main.Tpo src/examples/SeqPacketEchoServer/$(DEPDIR)/SeqPacketEchoServer-main.Po
#	$(AM_V_CXX)source='src/examples/SeqPacketEchoServer/main.cpp' object='src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SeqPacketEchoServer_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/examples/SeqPacketEchoServer/SeqPacketEchoServer-main.obj `if test -f 'src/examples/SeqPacketEchoServer/main.cpp'; then $(CYGPATH_W) 'src/examples/SeqPacketEchoServer/main.cpp'; else $(CYGPATH_W) '$(srcdir)/src/examples/SeqPacketEchoServer/main.cpp'; fi`

3rdparty/gmock/gtest/src/testrunner-gtest.o: 3rdparty/gmock/gtest/src/gtest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest.o -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest.o `test -f '3rdparty/gmock/gtest/src/gtest.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest.o `test -f '3rdparty/gmock/gtest/src/gtest.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest.cc

3rdparty/gmock/gtest/src/testrunner-gtest.obj: 3rdparty/gmock/gtest/src/gtest.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest.obj -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest.obj `if test -f '3rdparty/gmock/gtest/src/gtest.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest.obj `if test -f '3rdparty/gmock/gtest/src/gtest.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest.cc'; fi`

3rdparty/gmock/gtest/src/testrunner-gtest-death-test.o: 3rdparty/gmock/gtest/src/gtest-death-test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-death-test.o -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-death-test.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-death-test.o `test -f '3rdparty/gmock/gtest/src/gtest-death-test.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-death-test.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-death-test.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-death-test.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-death-test.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-death-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-death-test.o `test -f '3rdparty/gmock/gtest/src/gtest-death-test.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-death-test.cc

3rdparty/gmock/gtest/src/testrunner-gtest-death-test.obj: 3rdparty/gmock/gtest/src/gtest-death-test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-death-test.obj -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-death-test.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-death-test.obj `if test -f '3rdparty/gmock/gtest/src/gtest-death-test.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-death-test.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-death-test.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-death-test.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-death-test.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-death-test.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-death-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-death-test.obj `if test -f '3rdparty/gmock/gtest/src/gtest-death-test.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-death-test.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-death-test.cc'; fi`

3rdparty/gmock/gtest/src/testrunner-gtest-filepath.o: 3rdparty/gmock/gtest/src/gtest-filepath.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-filepath.o -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-filepath.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-filepath.o `test -f '3rdparty/gmock/gtest/src/gtest-filepath.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-filepath.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-filepath.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-filepath.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-filepath.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-filepath.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-filepath.o `test -f '3rdparty/gmock/gtest/src/gtest-filepath.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-filepath.cc

3rdparty/gmock/gtest/src/testrunner-gtest-filepath.obj: 3rdparty/gmock/gtest/src/gtest-filepath.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-filepath.obj -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-filepath.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-filepath.obj `if test -f '3rdparty/gmock/gtest/src/gtest-filepath.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-filepath.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-filepath.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-filepath.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-filepath.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-filepath.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-filepath.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-filepath.obj `if test -f '3rdparty/gmock/gtest/src/gtest-filepath.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-filepath.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-filepath.cc'; fi`

3rdparty/gmock/gtest/src/testrunner-gtest-port.o: 3rdparty/gmock/gtest/src/gtest-port.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-port.o -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-port.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-port.o `test -f '3rdparty/gmock/gtest/src/gtest-port.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-port.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-port.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-port.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-port.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-port.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-port.o `test -f '3rdparty/gmock/gtest/src/gtest-port.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-port.cc

3rdparty/gmock/gtest/src/testrunner-gtest-port.obj: 3rdparty/gmock/gtest/src/gtest-port.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-port.obj -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-port.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-port.obj `if test -f '3rdparty/gmock/gtest/src/gtest-port.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-port.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-port.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-port.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-port.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-port.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-port.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-port.obj `if test -f '3rdparty/gmock/gtest/src/gtest-port.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-port.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-port.cc'; fi`

3rdparty/gmock/gtest/src/testrunner-gtest-printers.o: 3rdparty/gmock/gtest/src/gtest-printers.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-printers.o -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-printers.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-printers.o `test -f '3rdparty/gmock/gtest/src/gtest-printers.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-printers.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-printers.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-printers.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-printers.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-printers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-printers.o `test -f '3rdparty/gmock/gtest/src/gtest-printers.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-printers.cc

3rdparty/gmock/gtest/src/testrunner-gtest-printers.obj: 3rdparty/gmock/gtest/src/gtest-printers.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-printers.obj -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-printers.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-printers.obj `if test -f '3rdparty/gmock/gtest/src/gtest-printers.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-printers.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-printers.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-printers.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-printers.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-printers.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-printers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-printers.obj `if test -f '3rdparty/gmock/gtest/src/gtest-printers.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-printers.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-printers.cc'; fi`

3rdparty/gmock/gtest/src/testrunner-gtest-test-part.o: 3rdparty/gmock/gtest/src/gtest-test-part.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-test-part.o -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-test-part.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-test-part.o `test -f '3rdparty/gmock/gtest/src/gtest-test-part.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-test-part.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-test-part.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-test-part.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-test-part.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-test-part.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-test-part.o `test -f '3rdparty/gmock/gtest/src/gtest-test-part.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-test-part.cc

3rdparty/gmock/gtest/src/testrunner-gtest-test-part.obj: 3rdparty/gmock/gtest/src/gtest-test-part.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-test-part.obj -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-test-part.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-test-part.obj `if test -f '3rdparty/gmock/gtest/src/gtest-test-part.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-test-part.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-test-part.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-test-part.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-test-part.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-test-part.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-test-part.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-test-part.obj `if test -f '3rdparty/gmock/gtest/src/gtest-test-part.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-test-part.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-test-part.cc'; fi`

3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.o: 3rdparty/gmock/gtest/src/gtest-typed-test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.o -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-typed-test.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.o `test -f '3rdparty/gmock/gtest/src/gtest-typed-test.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-typed-test.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-typed-test.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-typed-test.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-typed-test.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.o `test -f '3rdparty/gmock/gtest/src/gtest-typed-test.cc' || echo '$(srcdir)/'`3rdparty/gmock/gtest/src/gtest-typed-test.cc

3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.obj: 3rdparty/gmock/gtest/src/gtest-typed-test.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.obj -MD -MP -MF 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-typed-test.Tpo -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.obj `if test -f '3rdparty/gmock/gtest/src/gtest-typed-test.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-typed-test.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-typed-test.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-typed-test.Tpo 3rdparty/gmock/gtest/src/$(DEPDIR)/testrunner-gtest-typed-test.Po
#	$(AM_V_CXX)source='3rdparty/gmock/gtest/src/gtest-typed-test.cc' object='3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/gtest/src/testrunner-gtest-typed-test.obj `if test -f '3rdparty/gmock/gtest/src/gtest-typed-test.cc'; then $(CYGPATH_W) '3rdparty/gmock/gtest/src/gtest-typed-test.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/gtest/src/gtest-typed-test.cc'; fi`

3rdparty/gmock/src/testrunner-gmock-cardinalities.o: 3rdparty/gmock/src/gmock-cardinalities.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock-cardinalities.o -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-cardinalities.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock-cardinalities.o `test -f '3rdparty/gmock/src/gmock-cardinalities.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock-cardinalities.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-cardinalities.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-cardinalities.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock-cardinalities.cc' object='3rdparty/gmock/src/testrunner-gmock-cardinalities.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock-cardinalities.o `test -f '3rdparty/gmock/src/gmock-cardinalities.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock-cardinalities.cc

3rdparty/gmock/src/testrunner-gmock-cardinalities.obj: 3rdparty/gmock/src/gmock-cardinalities.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock-cardinalities.obj -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-cardinalities.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock-cardinalities.obj `if test -f '3rdparty/gmock/src/gmock-cardinalities.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock-cardinalities.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock-cardinalities.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-cardinalities.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-cardinalities.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock-cardinalities.cc' object='3rdparty/gmock/src/testrunner-gmock-cardinalities.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock-cardinalities.obj `if test -f '3rdparty/gmock/src/gmock-cardinalities.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock-cardinalities.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock-cardinalities.cc'; fi`

3rdparty/gmock/src/testrunner-gmock.o: 3rdparty/gmock/src/gmock.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock.o -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock.o `test -f '3rdparty/gmock/src/gmock.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock.cc' object='3rdparty/gmock/src/testrunner-gmock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock.o `test -f '3rdparty/gmock/src/gmock.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock.cc

3rdparty/gmock/src/testrunner-gmock.obj: 3rdparty/gmock/src/gmock.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock.obj -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock.obj `if test -f '3rdparty/gmock/src/gmock.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock.cc' object='3rdparty/gmock/src/testrunner-gmock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock.obj `if test -f '3rdparty/gmock/src/gmock.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock.cc'; fi`

3rdparty/gmock/src/testrunner-gmock-internal-utils.o: 3rdparty/gmock/src/gmock-internal-utils.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock-internal-utils.o -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-internal-utils.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock-internal-utils.o `test -f '3rdparty/gmock/src/gmock-internal-utils.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock-internal-utils.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-internal-utils.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-internal-utils.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock-internal-utils.cc' object='3rdparty/gmock/src/testrunner-gmock-internal-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock-internal-utils.o `test -f '3rdparty/gmock/src/gmock-internal-utils.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock-internal-utils.cc

3rdparty/gmock/src/testrunner-gmock-internal-utils.obj: 3rdparty/gmock/src/gmock-internal-utils.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock-internal-utils.obj -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-internal-utils.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock-internal-utils.obj `if test -f '3rdparty/gmock/src/gmock-internal-utils.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock-internal-utils.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock-internal-utils.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-internal-utils.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-internal-utils.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock-internal-utils.cc' object='3rdparty/gmock/src/testrunner-gmock-internal-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock-internal-utils.obj `if test -f '3rdparty/gmock/src/gmock-internal-utils.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock-internal-utils.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock-internal-utils.cc'; fi`

3rdparty/gmock/src/testrunner-gmock-matchers.o: 3rdparty/gmock/src/gmock-matchers.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock-matchers.o -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-matchers.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock-matchers.o `test -f '3rdparty/gmock/src/gmock-matchers.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock-matchers.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-matchers.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-matchers.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock-matchers.cc' object='3rdparty/gmock/src/testrunner-gmock-matchers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock-matchers.o `test -f '3rdparty/gmock/src/gmock-matchers.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock-matchers.cc

3rdparty/gmock/src/testrunner-gmock-matchers.obj: 3rdparty/gmock/src/gmock-matchers.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock-matchers.obj -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-matchers.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock-matchers.obj `if test -f '3rdparty/gmock/src/gmock-matchers.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock-matchers.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock-matchers.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-matchers.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-matchers.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock-matchers.cc' object='3rdparty/gmock/src/testrunner-gmock-matchers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock-matchers.obj `if test -f '3rdparty/gmock/src/gmock-matchers.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock-matchers.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock-matchers.cc'; fi`

3rdparty/gmock/src/testrunner-gmock-spec-builders.o: 3rdparty/gmock/src/gmock-spec-builders.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock-spec-builders.o -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-spec-builders.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock-spec-builders.o `test -f '3rdparty/gmock/src/gmock-spec-builders.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock-spec-builders.cc
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-spec-builders.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-spec-builders.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock-spec-builders.cc' object='3rdparty/gmock/src/testrunner-gmock-spec-builders.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock-spec-builders.o `test -f '3rdparty/gmock/src/gmock-spec-builders.cc' || echo '$(srcdir)/'`3rdparty/gmock/src/gmock-spec-builders.cc

3rdparty/gmock/src/testrunner-gmock-spec-builders.obj: 3rdparty/gmock/src/gmock-spec-builders.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT 3rdparty/gmock/src/testrunner-gmock-spec-builders.obj -MD -MP -MF 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-spec-builders.Tpo -c -o 3rdparty/gmock/src/testrunner-gmock-spec-builders.obj `if test -f '3rdparty/gmock/src/gmock-spec-builders.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock-spec-builders.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock-spec-builders.cc'; fi`
	$(AM_V_at)$(am__mv) 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-spec-builders.Tpo 3rdparty/gmock/src/$(DEPDIR)/testrunner-gmock-spec-builders.Po
#	$(AM_V_CXX)source='3rdparty/gmock/src/gmock-spec-builders.cc' object='3rdparty/gmock/src/testrunner-gmock-spec-builders.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o 3rdparty/gmock/src/testrunner-gmock-spec-builders.obj `if test -f '3rdparty/gmock/src/gmock-spec-builders.cc'; then $(CYGPATH_W) '3rdparty/gmock/src/gmock-spec-builders.cc'; else $(CYGPATH_W) '$(srcdir)/3rdparty/gmock/src/gmock-spec-builders.cc'; fi`

tst/testrunner-AsyncRunnerTest.o: tst/AsyncRunnerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-AsyncRunnerTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-AsyncRunnerTest.Tpo -c -o tst/testrunner-AsyncRunnerTest.o `test -f 'tst/AsyncRunnerTest.cpp' || echo '$(srcdir)/'`tst/AsyncRunnerTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-AsyncRunnerTest.Tpo tst/$(DEPDIR)/testrunner-AsyncRunnerTest.Po
#	$(AM_V_CXX)source='tst/AsyncRunnerTest.cpp' object='tst/testrunner-AsyncRunnerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-AsyncRunnerTest.o `test -f 'tst/AsyncRunnerTest.cpp' || echo '$(srcdir)/'`tst/AsyncRunnerTest.cpp

tst/testrunner-AsyncRunnerTest.obj: tst/AsyncRunnerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-AsyncRunnerTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-AsyncRunnerTest.Tpo -c -o tst/testrunner-AsyncRunnerTest.obj `if test -f 'tst/AsyncRunnerTest.cpp'; then $(CYGPATH_W) 'tst/AsyncRunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/AsyncRunnerTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-AsyncRunnerTest.Tpo tst/$(DEPDIR)/testrunner-AsyncRunnerTest.Po
#	$(AM_V_CXX)source='tst/AsyncRunnerTest.cpp' object='tst/testrunner-AsyncRunnerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-AsyncRunnerTest.obj `if test -f 'tst/AsyncRunnerTest.cpp'; then $(CYGPATH_W) 'tst/AsyncRunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/AsyncRunnerTest.cpp'; fi`

tst/testrunner-BaseEpollRunnerTest.o: tst/BaseEpollRunnerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-BaseEpollRunnerTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-BaseEpollRunnerTest.Tpo -c -o tst/testrunner-BaseEpollRunnerTest.o `test -f 'tst/BaseEpollRunnerTest.cpp' || echo '$(srcdir)/'`tst/BaseEpollRunnerTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-BaseEpollRunnerTest.Tpo tst/$(DEPDIR)/testrunner-BaseEpollRunnerTest.Po
#	$(AM_V_CXX)source='tst/BaseEpollRunnerTest.cpp' object='tst/testrunner-BaseEpollRunnerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-BaseEpollRunnerTest.o `test -f 'tst/BaseEpollRunnerTest.cpp' || echo '$(srcdir)/'`tst/BaseEpollRunnerTest.cpp

tst/testrunner-BaseEpollRunnerTest.obj: tst/BaseEpollRunnerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-BaseEpollRunnerTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-BaseEpollRunnerTest.Tpo -c -o tst/testrunner-BaseEpollRunnerTest.obj `if test -f 'tst/BaseEpollRunnerTest.cpp'; then $(CYGPATH_W) 'tst/BaseEpollRunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/BaseEpollRunnerTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-BaseEpollRunnerTest.Tpo tst/$(DEPDIR)/testrunner-BaseEpollRunnerTest.Po
#	$(AM_V_CXX)source='tst/BaseEpollRunnerTest.cpp' object='tst/testrunner-BaseEpollRunnerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-BaseEpollRunnerTest.obj `if test -f 'tst/BaseEpollRunnerTest.cpp'; then $(CYGPATH_W) 'tst/BaseEpollRunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/BaseEpollRunnerTest.cpp'; fi`

tst/testrunner-CallbackQueueTest.o: tst/CallbackQueueTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-CallbackQueueTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-CallbackQueueTest.Tpo -c -o tst/testrunner-CallbackQueueTest.o `test -f 'tst/CallbackQueueTest.cpp' || echo '$(srcdir)/'`tst/CallbackQueueTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-CallbackQueueTest.Tpo tst/$(DEPDIR)/testrunner-CallbackQueueTest.Po
#	$(AM_V_CXX)source='tst/CallbackQueueTest.cpp' object='tst/testrunner-CallbackQueueTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-CallbackQueueTest.o `test -f 'tst/CallbackQueueTest.cpp' || echo '$(srcdir)/'`tst/CallbackQueueTest.cpp

tst/testrunner-CallbackQueueTest.obj: tst/CallbackQueueTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-CallbackQueueTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-CallbackQueueTest.Tpo -c -o tst/testrunner-CallbackQueueTest.obj `if test -f 'tst/CallbackQueueTest.cpp'; then $(CYGPATH_W) 'tst/CallbackQueueTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/CallbackQueueTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-CallbackQueueTest.Tpo tst/$(DEPDIR)/testrunner-CallbackQueueTest.Po
#	$(AM_V_CXX)source='tst/CallbackQueueTest.cpp' object='tst/testrunner-CallbackQueueTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-CallbackQueueTest.obj `if test -f 'tst/CallbackQueueTest.cpp'; then $(CYGPATH_W) 'tst/CallbackQueueTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/CallbackQueueTest.cpp'; fi`

tst/testrunner-CalleeTest.o: tst/CalleeTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-CalleeTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-CalleeTest.Tpo -c -o tst/testrunner-CalleeTest.o `test -f 'tst/CalleeTest.cpp' || echo '$(srcdir)/'`tst/CalleeTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-CalleeTest.Tpo tst/$(DEPDIR)/testrunner-CalleeTest.Po
#	$(AM_V_CXX)source='tst/CalleeTest.cpp' object='tst/testrunner-CalleeTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-CalleeTest.o `test -f 'tst/CalleeTest.cpp' || echo '$(srcdir)/'`tst/CalleeTest.cpp

tst/testrunner-CalleeTest.obj: tst/CalleeTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-CalleeTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-CalleeTest.Tpo -c -o tst/testrunner-CalleeTest.obj `if test -f 'tst/CalleeTest.cpp'; then $(CYGPATH_W) 'tst/CalleeTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/CalleeTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-CalleeTest.Tpo tst/$(DEPDIR)/testrunner-CalleeTest.Po
#	$(AM_V_CXX)source='tst/CalleeTest.cpp' object='tst/testrunner-CalleeTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-CalleeTest.obj `if test -f 'tst/CalleeTest.cpp'; then $(CYGPATH_W) 'tst/CalleeTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/CalleeTest.cpp'; fi`

tst/testrunner-ChildProcessTest.o: tst/ChildProcessTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-ChildProcessTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-ChildProcessTest.Tpo -c -o tst/testrunner-ChildProcessTest.o `test -f 'tst/ChildProcessTest.cpp' || echo '$(srcdir)/'`tst/ChildProcessTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-ChildProcessTest.Tpo tst/$(DEPDIR)/testrunner-ChildProcessTest.Po
#	$(AM_V_CXX)source='tst/ChildProcessTest.cpp' object='tst/testrunner-ChildProcessTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-ChildProcessTest.o `test -f 'tst/ChildProcessTest.cpp' || echo '$(srcdir)/'`tst/ChildProcessTest.cpp

tst/testrunner-ChildProcessTest.obj: tst/ChildProcessTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-ChildProcessTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-ChildProcessTest.Tpo -c -o tst/testrunner-ChildProcessTest.obj `if test -f 'tst/ChildProcessTest.cpp'; then $(CYGPATH_W) 'tst/ChildProcessTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/ChildProcessTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-ChildProcessTest.Tpo tst/$(DEPDIR)/testrunner-ChildProcessTest.Po
#	$(AM_V_CXX)source='tst/ChildProcessTest.cpp' object='tst/testrunner-ChildProcessTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-ChildProcessTest.obj `if test -f 'tst/ChildProcessTest.cpp'; then $(CYGPATH_W) 'tst/ChildProcessTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/ChildProcessTest.cpp'; fi`

tst/testrunner-ControlMessageTest.o: tst/ControlMessageTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-ControlMessageTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-ControlMessageTest.Tpo -c -o tst/testrunner-ControlMessageTest.o `test -f 'tst/ControlMessageTest.cpp' || echo '$(srcdir)/'`tst/ControlMessageTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-ControlMessageTest.Tpo tst/$(DEPDIR)/testrunner-ControlMessageTest.Po
#	$(AM_V_CXX)source='tst/ControlMessageTest.cpp' object='tst/testrunner-ControlMessageTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-ControlMessageTest.o `test -f 'tst/ControlMessageTest.cpp' || echo '$(srcdir)/'`tst/ControlMessageTest.cpp

tst/testrunner-ControlMessageTest.obj: tst/ControlMessageTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-ControlMessageTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-ControlMessageTest.Tpo -c -o tst/testrunner-ControlMessageTest.obj `if test -f 'tst/ControlMessageTest.cpp'; then $(CYGPATH_W) 'tst/ControlMessageTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/ControlMessageTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-ControlMessageTest.Tpo tst/$(DEPDIR)/testrunner-ControlMessageTest.Po
#	$(AM_V_CXX)source='tst/ControlMessageTest.cpp' object='tst/testrunner-ControlMessageTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-ControlMessageTest.obj `if test -f 'tst/ControlMessageTest.cpp'; then $(CYGPATH_W) 'tst/ControlMessageTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/ControlMessageTest.cpp'; fi`

tst/testrunner-DumpCreatorTest.o: tst/DumpCreatorTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-DumpCreatorTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-DumpCreatorTest.Tpo -c -o tst/testrunner-DumpCreatorTest.o `test -f 'tst/DumpCreatorTest.cpp' || echo '$(srcdir)/'`tst/DumpCreatorTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-DumpCreatorTest.Tpo tst/$(DEPDIR)/testrunner-DumpCreatorTest.Po
#	$(AM_V_CXX)source='tst/DumpCreatorTest.cpp' object='tst/testrunner-DumpCreatorTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-DumpCreatorTest.o `test -f 'tst/DumpCreatorTest.cpp' || echo '$(srcdir)/'`tst/DumpCreatorTest.cpp

tst/testrunner-DumpCreatorTest.obj: tst/DumpCreatorTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-DumpCreatorTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-DumpCreatorTest.Tpo -c -o tst/testrunner-DumpCreatorTest.obj `if test -f 'tst/DumpCreatorTest.cpp'; then $(CYGPATH_W) 'tst/DumpCreatorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/DumpCreatorTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-DumpCreatorTest.Tpo tst/$(DEPDIR)/testrunner-DumpCreatorTest.Po
#	$(AM_V_CXX)source='tst/DumpCreatorTest.cpp' object='tst/testrunner-DumpCreatorTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-DumpCreatorTest.obj `if test -f 'tst/DumpCreatorTest.cpp'; then $(CYGPATH_W) 'tst/DumpCreatorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/DumpCreatorTest.cpp'; fi`

tst/testrunner-DumpFormatterTest.o: tst/DumpFormatterTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-DumpFormatterTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-DumpFormatterTest.Tpo -c -o tst/testrunner-DumpFormatterTest.o `test -f 'tst/DumpFormatterTest.cpp' || echo '$(srcdir)/'`tst/DumpFormatterTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-DumpFormatterTest.Tpo tst/$(DEPDIR)/testrunner-DumpFormatterTest.Po
#	$(AM_V_CXX)source='tst/DumpFormatterTest.cpp' object='tst/testrunner-DumpFormatterTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-DumpFormatterTest.o `test -f 'tst/DumpFormatterTest.cpp' || echo '$(srcdir)/'`tst/DumpFormatterTest.cpp

tst/testrunner-DumpFormatterTest.obj: tst/DumpFormatterTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-DumpFormatterTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-DumpFormatterTest.Tpo -c -o tst/testrunner-DumpFormatterTest.obj `if test -f 'tst/DumpFormatterTest.cpp'; then $(CYGPATH_W) 'tst/DumpFormatterTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/DumpFormatterTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-DumpFormatterTest.Tpo tst/$(DEPDIR)/testrunner-DumpFormatterTest.Po
#	$(AM_V_CXX)source='tst/DumpFormatterTest.cpp' object='tst/testrunner-DumpFormatterTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-DumpFormatterTest.obj `if test -f 'tst/DumpFormatterTest.cpp'; then $(CYGPATH_W) 'tst/DumpFormatterTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/DumpFormatterTest.cpp'; fi`

tst/testrunner-DumpTest.o: tst/DumpTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-DumpTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-DumpTest.Tpo -c -o tst/testrunner-DumpTest.o `test -f 'tst/DumpTest.cpp' || echo '$(srcdir)/'`tst/DumpTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-DumpTest.Tpo tst/$(DEPDIR)/testrunner-DumpTest.Po
#	$(AM_V_CXX)source='tst/DumpTest.cpp' object='tst/testrunner-DumpTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-DumpTest.o `test -f 'tst/DumpTest.cpp' || echo '$(srcdir)/'`tst/DumpTest.cpp

tst/testrunner-DumpTest.obj: tst/DumpTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-DumpTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-DumpTest.Tpo -c -o tst/testrunner-DumpTest.obj `if test -f 'tst/DumpTest.cpp'; then $(CYGPATH_W) 'tst/DumpTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/DumpTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-DumpTest.Tpo tst/$(DEPDIR)/testrunner-DumpTest.Po
#	$(AM_V_CXX)source='tst/DumpTest.cpp' object='tst/testrunner-DumpTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-DumpTest.obj `if test -f 'tst/DumpTest.cpp'; then $(CYGPATH_W) 'tst/DumpTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/DumpTest.cpp'; fi`

tst/testrunner-DumpUtilsTest.o: tst/DumpUtilsTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-DumpUtilsTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-DumpUtilsTest.Tpo -c -o tst/testrunner-DumpUtilsTest.o `test -f 'tst/DumpUtilsTest.cpp' || echo '$(srcdir)/'`tst/DumpUtilsTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-DumpUtilsTest.Tpo tst/$(DEPDIR)/testrunner-DumpUtilsTest.Po
#	$(AM_V_CXX)source='tst/DumpUtilsTest.cpp' object='tst/testrunner-DumpUtilsTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-DumpUtilsTest.o `test -f 'tst/DumpUtilsTest.cpp' || echo '$(srcdir)/'`tst/DumpUtilsTest.cpp

tst/testrunner-DumpUtilsTest.obj: tst/DumpUtilsTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-DumpUtilsTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-DumpUtilsTest.Tpo -c -o tst/testrunner-DumpUtilsTest.obj `if test -f 'tst/DumpUtilsTest.cpp'; then $(CYGPATH_W) 'tst/DumpUtilsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/DumpUtilsTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-DumpUtilsTest.Tpo tst/$(DEPDIR)/testrunner-DumpUtilsTest.Po
#	$(AM_V_CXX)source='tst/DumpUtilsTest.cpp' object='tst/testrunner-DumpUtilsTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-DumpUtilsTest.obj `if test -f 'tst/DumpUtilsTest.cpp'; then $(CYGPATH_W) 'tst/DumpUtilsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/DumpUtilsTest.cpp'; fi`

tst/testrunner-EpollRunnerTest.o: tst/EpollRunnerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-EpollRunnerTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-EpollRunnerTest.Tpo -c -o tst/testrunner-EpollRunnerTest.o `test -f 'tst/EpollRunnerTest.cpp' || echo '$(srcdir)/'`tst/EpollRunnerTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-EpollRunnerTest.Tpo tst/$(DEPDIR)/testrunner-EpollRunnerTest.Po
#	$(AM_V_CXX)source='tst/EpollRunnerTest.cpp' object='tst/testrunner-EpollRunnerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-EpollRunnerTest.o `test -f 'tst/EpollRunnerTest.cpp' || echo '$(srcdir)/'`tst/EpollRunnerTest.cpp

tst/testrunner-EpollRunnerTest.obj: tst/EpollRunnerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-EpollRunnerTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-EpollRunnerTest.Tpo -c -o tst/testrunner-EpollRunnerTest.obj `if test -f 'tst/EpollRunnerTest.cpp'; then $(CYGPATH_W) 'tst/EpollRunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/EpollRunnerTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-EpollRunnerTest.Tpo tst/$(DEPDIR)/testrunner-EpollRunnerTest.Po
#	$(AM_V_CXX)source='tst/EpollRunnerTest.cpp' object='tst/testrunner-EpollRunnerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-EpollRunnerTest.obj `if test -f 'tst/EpollRunnerTest.cpp'; then $(CYGPATH_W) 'tst/EpollRunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/EpollRunnerTest.cpp'; fi`

tst/testrunner-EpollRunnerWithoutSignalsTest.o: tst/EpollRunnerWithoutSignalsTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-EpollRunnerWithoutSignalsTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-EpollRunnerWithoutSignalsTest.Tpo -c -o tst/testrunner-EpollRunnerWithoutSignalsTest.o `test -f 'tst/EpollRunnerWithoutSignalsTest.cpp' || echo '$(srcdir)/'`tst/EpollRunnerWithoutSignalsTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-EpollRunnerWithoutSignalsTest.Tpo tst/$(DEPDIR)/testrunner-EpollRunnerWithoutSignalsTest.Po
#	$(AM_V_CXX)source='tst/EpollRunnerWithoutSignalsTest.cpp' object='tst/testrunner-EpollRunnerWithoutSignalsTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-EpollRunnerWithoutSignalsTest.o `test -f 'tst/EpollRunnerWithoutSignalsTest.cpp' || echo '$(srcdir)/'`tst/EpollRunnerWithoutSignalsTest.cpp

tst/testrunner-EpollRunnerWithoutSignalsTest.obj: tst/EpollRunnerWithoutSignalsTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-EpollRunnerWithoutSignalsTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-EpollRunnerWithoutSignalsTest.Tpo -c -o tst/testrunner-EpollRunnerWithoutSignalsTest.obj `if test -f 'tst/EpollRunnerWithoutSignalsTest.cpp'; then $(CYGPATH_W) 'tst/EpollRunnerWithoutSignalsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/EpollRunnerWithoutSignalsTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-EpollRunnerWithoutSignalsTest.Tpo tst/$(DEPDIR)/testrunner-EpollRunnerWithoutSignalsTest.Po
#	$(AM_V_CXX)source='tst/EpollRunnerWithoutSignalsTest.cpp' object='tst/testrunner-EpollRunnerWithoutSignalsTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-EpollRunnerWithoutSignalsTest.obj `if test -f 'tst/EpollRunnerWithoutSignalsTest.cpp'; then $(CYGPATH_W) 'tst/EpollRunnerWithoutSignalsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/EpollRunnerWithoutSignalsTest.cpp'; fi`

tst/testrunner-EpollRunnerWithSignalsTest.o: tst/EpollRunnerWithSignalsTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-EpollRunnerWithSignalsTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-EpollRunnerWithSignalsTest.Tpo -c -o tst/testrunner-EpollRunnerWithSignalsTest.o `test -f 'tst/EpollRunnerWithSignalsTest.cpp' || echo '$(srcdir)/'`tst/EpollRunnerWithSignalsTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-EpollRunnerWithSignalsTest.Tpo tst/$(DEPDIR)/testrunner-EpollRunnerWithSignalsTest.Po
#	$(AM_V_CXX)source='tst/EpollRunnerWithSignalsTest.cpp' object='tst/testrunner-EpollRunnerWithSignalsTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-EpollRunnerWithSignalsTest.o `test -f 'tst/EpollRunnerWithSignalsTest.cpp' || echo '$(srcdir)/'`tst/EpollRunnerWithSignalsTest.cpp

tst/testrunner-EpollRunnerWithSignalsTest.obj: tst/EpollRunnerWithSignalsTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-EpollRunnerWithSignalsTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-EpollRunnerWithSignalsTest.Tpo -c -o tst/testrunner-EpollRunnerWithSignalsTest.obj `if test -f 'tst/EpollRunnerWithSignalsTest.cpp'; then $(CYGPATH_W) 'tst/EpollRunnerWithSignalsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/EpollRunnerWithSignalsTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-EpollRunnerWithSignalsTest.Tpo tst/$(DEPDIR)/testrunner-EpollRunnerWithSignalsTest.Po
#	$(AM_V_CXX)source='tst/EpollRunnerWithSignalsTest.cpp' object='tst/testrunner-EpollRunnerWithSignalsTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-EpollRunnerWithSignalsTest.obj `if test -f 'tst/EpollRunnerWithSignalsTest.cpp'; then $(CYGPATH_W) 'tst/EpollRunnerWithSignalsTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/EpollRunnerWithSignalsTest.cpp'; fi`

tst/testrunner-EpollTest.o: tst/EpollTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-EpollTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-EpollTest.Tpo -c -o tst/testrunner-EpollTest.o `test -f 'tst/EpollTest.cpp' || echo '$(srcdir)/'`tst/EpollTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-EpollTest.Tpo tst/$(DEPDIR)/testrunner-EpollTest.Po
#	$(AM_V_CXX)source='tst/EpollTest.cpp' object='tst/testrunner-EpollTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-EpollTest.o `test -f 'tst/EpollTest.cpp' || echo '$(srcdir)/'`tst/EpollTest.cpp

tst/testrunner-EpollTest.obj: tst/EpollTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-EpollTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-EpollTest.Tpo -c -o tst/testrunner-EpollTest.obj `if test -f 'tst/EpollTest.cpp'; then $(CYGPATH_W) 'tst/EpollTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/EpollTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-EpollTest.Tpo tst/$(DEPDIR)/testrunner-EpollTest.Po
#	$(AM_V_CXX)source='tst/EpollTest.cpp' object='tst/testrunner-EpollTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-EpollTest.obj `if test -f 'tst/EpollTest.cpp'; then $(CYGPATH_W) 'tst/EpollTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/EpollTest.cpp'; fi`

tst/testrunner-ExceptionTest.o: tst/ExceptionTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-ExceptionTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-ExceptionTest.Tpo -c -o tst/testrunner-ExceptionTest.o `test -f 'tst/ExceptionTest.cpp' || echo '$(srcdir)/'`tst/ExceptionTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-ExceptionTest.Tpo tst/$(DEPDIR)/testrunner-ExceptionTest.Po
#	$(AM_V_CXX)source='tst/ExceptionTest.cpp' object='tst/testrunner-ExceptionTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-ExceptionTest.o `test -f 'tst/ExceptionTest.cpp' || echo '$(srcdir)/'`tst/ExceptionTest.cpp

tst/testrunner-ExceptionTest.obj: tst/ExceptionTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-ExceptionTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-ExceptionTest.Tpo -c -o tst/testrunner-ExceptionTest.obj `if test -f 'tst/ExceptionTest.cpp'; then $(CYGPATH_W) 'tst/ExceptionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/ExceptionTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-ExceptionTest.Tpo tst/$(DEPDIR)/testrunner-ExceptionTest.Po
#	$(AM_V_CXX)source='tst/ExceptionTest.cpp' object='tst/testrunner-ExceptionTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-ExceptionTest.obj `if test -f 'tst/ExceptionTest.cpp'; then $(CYGPATH_W) 'tst/ExceptionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/ExceptionTest.cpp'; fi`

tst/testrunner-FDListenerMapTest.o: tst/FDListenerMapTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-FDListenerMapTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-FDListenerMapTest.Tpo -c -o tst/testrunner-FDListenerMapTest.o `test -f 'tst/FDListenerMapTest.cpp' || echo '$(srcdir)/'`tst/FDListenerMapTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-FDListenerMapTest.Tpo tst/$(DEPDIR)/testrunner-FDListenerMapTest.Po
#	$(AM_V_CXX)source='tst/FDListenerMapTest.cpp' object='tst/testrunner-FDListenerMapTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-FDListenerMapTest.o `test -f 'tst/FDListenerMapTest.cpp' || echo '$(srcdir)/'`tst/FDListenerMapTest.cpp

tst/testrunner-FDListenerMapTest.obj: tst/FDListenerMapTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-FDListenerMapTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-FDListenerMapTest.Tpo -c -o tst/testrunner-FDListenerMapTest.obj `if test -f 'tst/FDListenerMapTest.cpp'; then $(CYGPATH_W) 'tst/FDListenerMapTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/FDListenerMapTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-FDListenerMapTest.Tpo tst/$(DEPDIR)/testrunner-FDListenerMapTest.Po
#	$(AM_V_CXX)source='tst/FDListenerMapTest.cpp' object='tst/testrunner-FDListenerMapTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-FDListenerMapTest.obj `if test -f 'tst/FDListenerMapTest.cpp'; then $(CYGPATH_W) 'tst/FDListenerMapTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/FDListenerMapTest.cpp'; fi`

tst/testrunner-FDListenerTest.o: tst/FDListenerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-FDListenerTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-FDListenerTest.Tpo -c -o tst/testrunner-FDListenerTest.o `test -f 'tst/FDListenerTest.cpp' || echo '$(srcdir)/'`tst/FDListenerTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-FDListenerTest.Tpo tst/$(DEPDIR)/testrunner-FDListenerTest.Po
#	$(AM_V_CXX)source='tst/FDListenerTest.cpp' object='tst/testrunner-FDListenerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-FDListenerTest.o `test -f 'tst/FDListenerTest.cpp' || echo '$(srcdir)/'`tst/FDListenerTest.cpp

tst/testrunner-FDListenerTest.obj: tst/FDListenerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-FDListenerTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-FDListenerTest.Tpo -c -o tst/testrunner-FDListenerTest.obj `if test -f 'tst/FDListenerTest.cpp'; then $(CYGPATH_W) 'tst/FDListenerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/FDListenerTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-FDListenerTest.Tpo tst/$(DEPDIR)/testrunner-FDListenerTest.Po
#	$(AM_V_CXX)source='tst/FDListenerTest.cpp' object='tst/testrunner-FDListenerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-FDListenerTest.obj `if test -f 'tst/FDListenerTest.cpp'; then $(CYGPATH_W) 'tst/FDListenerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/FDListenerTest.cpp'; fi`

tst/testrunner-FDMonitorTest.o: tst/FDMonitorTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-FDMonitorTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-FDMonitorTest.Tpo -c -o tst/testrunner-FDMonitorTest.o `test -f 'tst/FDMonitorTest.cpp' || echo '$(srcdir)/'`tst/FDMonitorTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-FDMonitorTest.Tpo tst/$(DEPDIR)/testrunner-FDMonitorTest.Po
#	$(AM_V_CXX)source='tst/FDMonitorTest.cpp' object='tst/testrunner-FDMonitorTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-FDMonitorTest.o `test -f 'tst/FDMonitorTest.cpp' || echo '$(srcdir)/'`tst/FDMonitorTest.cpp

tst/testrunner-FDMonitorTest.obj: tst/FDMonitorTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-FDMonitorTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-FDMonitorTest.Tpo -c -o tst/testrunner-FDMonitorTest.obj `if test -f 'tst/FDMonitorTest.cpp'; then $(CYGPATH_W) 'tst/FDMonitorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/FDMonitorTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-FDMonitorTest.Tpo tst/$(DEPDIR)/testrunner-FDMonitorTest.Po
#	$(AM_V_CXX)source='tst/FDMonitorTest.cpp' object='tst/testrunner-FDMonitorTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-FDMonitorTest.obj `if test -f 'tst/FDMonitorTest.cpp'; then $(CYGPATH_W) 'tst/FDMonitorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/FDMonitorTest.cpp'; fi`

tst/testrunner-FileDescriptorTest.o: tst/FileDescriptorTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-FileDescriptorTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-FileDescriptorTest.Tpo -c -o tst/testrunner-FileDescriptorTest.o `test -f 'tst/FileDescriptorTest.cpp' || echo '$(srcdir)/'`tst/FileDescriptorTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-FileDescriptorTest.Tpo tst/$(DEPDIR)/testrunner-FileDescriptorTest.Po
#	$(AM_V_CXX)source='tst/FileDescriptorTest.cpp' object='tst/testrunner-FileDescriptorTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-FileDescriptorTest.o `test -f 'tst/FileDescriptorTest.cpp' || echo '$(srcdir)/'`tst/FileDescriptorTest.cpp

tst/testrunner-FileDescriptorTest.obj: tst/FileDescriptorTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-FileDescriptorTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-FileDescriptorTest.Tpo -c -o tst/testrunner-FileDescriptorTest.obj `if test -f 'tst/FileDescriptorTest.cpp'; then $(CYGPATH_W) 'tst/FileDescriptorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/FileDescriptorTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-FileDescriptorTest.Tpo tst/$(DEPDIR)/testrunner-FileDescriptorTest.Po
#	$(AM_V_CXX)source='tst/FileDescriptorTest.cpp' object='tst/testrunner-FileDescriptorTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-FileDescriptorTest.obj `if test -f 'tst/FileDescriptorTest.cpp'; then $(CYGPATH_W) 'tst/FileDescriptorTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/FileDescriptorTest.cpp'; fi`

tst/testrunner-ListeningSocketTest.o: tst/ListeningSocketTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-ListeningSocketTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-ListeningSocketTest.Tpo -c -o tst/testrunner-ListeningSocketTest.o `test -f 'tst/ListeningSocketTest.cpp' || echo '$(srcdir)/'`tst/ListeningSocketTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-ListeningSocketTest.Tpo tst/$(DEPDIR)/testrunner-ListeningSocketTest.Po
#	$(AM_V_CXX)source='tst/ListeningSocketTest.cpp' object='tst/testrunner-ListeningSocketTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-ListeningSocketTest.o `test -f 'tst/ListeningSocketTest.cpp' || echo '$(srcdir)/'`tst/ListeningSocketTest.cpp

tst/testrunner-ListeningSocketTest.obj: tst/ListeningSocketTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-ListeningSocketTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-ListeningSocketTest.Tpo -c -o tst/testrunner-ListeningSocketTest.obj `if test -f 'tst/ListeningSocketTest.cpp'; then $(CYGPATH_W) 'tst/ListeningSocketTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/ListeningSocketTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-ListeningSocketTest.Tpo tst/$(DEPDIR)/testrunner-ListeningSocketTest.Po
#	$(AM_V_CXX)source='tst/ListeningSocketTest.cpp' object='tst/testrunner-ListeningSocketTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-ListeningSocketTest.obj `if test -f 'tst/ListeningSocketTest.cpp'; then $(CYGPATH_W) 'tst/ListeningSocketTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/ListeningSocketTest.cpp'; fi`

tst/testrunner-main.o: tst/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-main.o -MD -MP -MF tst/$(DEPDIR)/testrunner-main.Tpo -c -o tst/testrunner-main.o `test -f 'tst/main.cpp' || echo '$(srcdir)/'`tst/main.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-main.Tpo tst/$(DEPDIR)/testrunner-main.Po
#	$(AM_V_CXX)source='tst/main.cpp' object='tst/testrunner-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-main.o `test -f 'tst/main.cpp' || echo '$(srcdir)/'`tst/main.cpp

tst/testrunner-main.obj: tst/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-main.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-main.Tpo -c -o tst/testrunner-main.obj `if test -f 'tst/main.cpp'; then $(CYGPATH_W) 'tst/main.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/main.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-main.Tpo tst/$(DEPDIR)/testrunner-main.Po
#	$(AM_V_CXX)source='tst/main.cpp' object='tst/testrunner-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-main.obj `if test -f 'tst/main.cpp'; then $(CYGPATH_W) 'tst/main.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/main.cpp'; fi`

tst/testrunner-PostponeDeletionTest.o: tst/PostponeDeletionTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-PostponeDeletionTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-PostponeDeletionTest.Tpo -c -o tst/testrunner-PostponeDeletionTest.o `test -f 'tst/PostponeDeletionTest.cpp' || echo '$(srcdir)/'`tst/PostponeDeletionTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-PostponeDeletionTest.Tpo tst/$(DEPDIR)/testrunner-PostponeDeletionTest.Po
#	$(AM_V_CXX)source='tst/PostponeDeletionTest.cpp' object='tst/testrunner-PostponeDeletionTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-PostponeDeletionTest.o `test -f 'tst/PostponeDeletionTest.cpp' || echo '$(srcdir)/'`tst/PostponeDeletionTest.cpp

tst/testrunner-PostponeDeletionTest.obj: tst/PostponeDeletionTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-PostponeDeletionTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-PostponeDeletionTest.Tpo -c -o tst/testrunner-PostponeDeletionTest.obj `if test -f 'tst/PostponeDeletionTest.cpp'; then $(CYGPATH_W) 'tst/PostponeDeletionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/PostponeDeletionTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-PostponeDeletionTest.Tpo tst/$(DEPDIR)/testrunner-PostponeDeletionTest.Po
#	$(AM_V_CXX)source='tst/PostponeDeletionTest.cpp' object='tst/testrunner-PostponeDeletionTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-PostponeDeletionTest.obj `if test -f 'tst/PostponeDeletionTest.cpp'; then $(CYGPATH_W) 'tst/PostponeDeletionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/PostponeDeletionTest.cpp'; fi`

tst/testrunner-RunnerTest.o: tst/RunnerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-RunnerTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-RunnerTest.Tpo -c -o tst/testrunner-RunnerTest.o `test -f 'tst/RunnerTest.cpp' || echo '$(srcdir)/'`tst/RunnerTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-RunnerTest.Tpo tst/$(DEPDIR)/testrunner-RunnerTest.Po
#	$(AM_V_CXX)source='tst/RunnerTest.cpp' object='tst/testrunner-RunnerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-RunnerTest.o `test -f 'tst/RunnerTest.cpp' || echo '$(srcdir)/'`tst/RunnerTest.cpp

tst/testrunner-RunnerTest.obj: tst/RunnerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-RunnerTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-RunnerTest.Tpo -c -o tst/testrunner-RunnerTest.obj `if test -f 'tst/RunnerTest.cpp'; then $(CYGPATH_W) 'tst/RunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/RunnerTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-RunnerTest.Tpo tst/$(DEPDIR)/testrunner-RunnerTest.Po
#	$(AM_V_CXX)source='tst/RunnerTest.cpp' object='tst/testrunner-RunnerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-RunnerTest.obj `if test -f 'tst/RunnerTest.cpp'; then $(CYGPATH_W) 'tst/RunnerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/RunnerTest.cpp'; fi`

tst/testrunner-SeqPacketSocketMock.o: tst/SeqPacketSocketMock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SeqPacketSocketMock.o -MD -MP -MF tst/$(DEPDIR)/testrunner-SeqPacketSocketMock.Tpo -c -o tst/testrunner-SeqPacketSocketMock.o `test -f 'tst/SeqPacketSocketMock.cpp' || echo '$(srcdir)/'`tst/SeqPacketSocketMock.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SeqPacketSocketMock.Tpo tst/$(DEPDIR)/testrunner-SeqPacketSocketMock.Po
#	$(AM_V_CXX)source='tst/SeqPacketSocketMock.cpp' object='tst/testrunner-SeqPacketSocketMock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SeqPacketSocketMock.o `test -f 'tst/SeqPacketSocketMock.cpp' || echo '$(srcdir)/'`tst/SeqPacketSocketMock.cpp

tst/testrunner-SeqPacketSocketMock.obj: tst/SeqPacketSocketMock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SeqPacketSocketMock.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-SeqPacketSocketMock.Tpo -c -o tst/testrunner-SeqPacketSocketMock.obj `if test -f 'tst/SeqPacketSocketMock.cpp'; then $(CYGPATH_W) 'tst/SeqPacketSocketMock.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SeqPacketSocketMock.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SeqPacketSocketMock.Tpo tst/$(DEPDIR)/testrunner-SeqPacketSocketMock.Po
#	$(AM_V_CXX)source='tst/SeqPacketSocketMock.cpp' object='tst/testrunner-SeqPacketSocketMock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SeqPacketSocketMock.obj `if test -f 'tst/SeqPacketSocketMock.cpp'; then $(CYGPATH_W) 'tst/SeqPacketSocketMock.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SeqPacketSocketMock.cpp'; fi`

tst/testrunner-SeqPacketSocketTest.o: tst/SeqPacketSocketTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SeqPacketSocketTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-SeqPacketSocketTest.Tpo -c -o tst/testrunner-SeqPacketSocketTest.o `test -f 'tst/SeqPacketSocketTest.cpp' || echo '$(srcdir)/'`tst/SeqPacketSocketTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SeqPacketSocketTest.Tpo tst/$(DEPDIR)/testrunner-SeqPacketSocketTest.Po
#	$(AM_V_CXX)source='tst/SeqPacketSocketTest.cpp' object='tst/testrunner-SeqPacketSocketTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SeqPacketSocketTest.o `test -f 'tst/SeqPacketSocketTest.cpp' || echo '$(srcdir)/'`tst/SeqPacketSocketTest.cpp

tst/testrunner-SeqPacketSocketTest.obj: tst/SeqPacketSocketTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SeqPacketSocketTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-SeqPacketSocketTest.Tpo -c -o tst/testrunner-SeqPacketSocketTest.obj `if test -f 'tst/SeqPacketSocketTest.cpp'; then $(CYGPATH_W) 'tst/SeqPacketSocketTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SeqPacketSocketTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SeqPacketSocketTest.Tpo tst/$(DEPDIR)/testrunner-SeqPacketSocketTest.Po
#	$(AM_V_CXX)source='tst/SeqPacketSocketTest.cpp' object='tst/testrunner-SeqPacketSocketTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SeqPacketSocketTest.obj `if test -f 'tst/SeqPacketSocketTest.cpp'; then $(CYGPATH_W) 'tst/SeqPacketSocketTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SeqPacketSocketTest.cpp'; fi`

tst/testrunner-SignalSetTest.o: tst/SignalSetTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SignalSetTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-SignalSetTest.Tpo -c -o tst/testrunner-SignalSetTest.o `test -f 'tst/SignalSetTest.cpp' || echo '$(srcdir)/'`tst/SignalSetTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SignalSetTest.Tpo tst/$(DEPDIR)/testrunner-SignalSetTest.Po
#	$(AM_V_CXX)source='tst/SignalSetTest.cpp' object='tst/testrunner-SignalSetTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SignalSetTest.o `test -f 'tst/SignalSetTest.cpp' || echo '$(srcdir)/'`tst/SignalSetTest.cpp

tst/testrunner-SignalSetTest.obj: tst/SignalSetTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SignalSetTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-SignalSetTest.Tpo -c -o tst/testrunner-SignalSetTest.obj `if test -f 'tst/SignalSetTest.cpp'; then $(CYGPATH_W) 'tst/SignalSetTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SignalSetTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SignalSetTest.Tpo tst/$(DEPDIR)/testrunner-SignalSetTest.Po
#	$(AM_V_CXX)source='tst/SignalSetTest.cpp' object='tst/testrunner-SignalSetTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SignalSetTest.obj `if test -f 'tst/SignalSetTest.cpp'; then $(CYGPATH_W) 'tst/SignalSetTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SignalSetTest.cpp'; fi`

tst/testrunner-SocketAddressTest.o: tst/SocketAddressTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SocketAddressTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-SocketAddressTest.Tpo -c -o tst/testrunner-SocketAddressTest.o `test -f 'tst/SocketAddressTest.cpp' || echo '$(srcdir)/'`tst/SocketAddressTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SocketAddressTest.Tpo tst/$(DEPDIR)/testrunner-SocketAddressTest.Po
#	$(AM_V_CXX)source='tst/SocketAddressTest.cpp' object='tst/testrunner-SocketAddressTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SocketAddressTest.o `test -f 'tst/SocketAddressTest.cpp' || echo '$(srcdir)/'`tst/SocketAddressTest.cpp

tst/testrunner-SocketAddressTest.obj: tst/SocketAddressTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SocketAddressTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-SocketAddressTest.Tpo -c -o tst/testrunner-SocketAddressTest.obj `if test -f 'tst/SocketAddressTest.cpp'; then $(CYGPATH_W) 'tst/SocketAddressTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SocketAddressTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SocketAddressTest.Tpo tst/$(DEPDIR)/testrunner-SocketAddressTest.Po
#	$(AM_V_CXX)source='tst/SocketAddressTest.cpp' object='tst/testrunner-SocketAddressTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SocketAddressTest.obj `if test -f 'tst/SocketAddressTest.cpp'; then $(CYGPATH_W) 'tst/SocketAddressTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SocketAddressTest.cpp'; fi`

tst/testrunner-StreamBufferTest.o: tst/StreamBufferTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-StreamBufferTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-StreamBufferTest.Tpo -c -o tst/testrunner-StreamBufferTest.o `test -f 'tst/StreamBufferTest.cpp' || echo '$(srcdir)/'`tst/StreamBufferTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-StreamBufferTest.Tpo tst/$(DEPDIR)/testrunner-StreamBufferTest.Po
#	$(AM_V_CXX)source='tst/StreamBufferTest.cpp' object='tst/testrunner-StreamBufferTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-StreamBufferTest.o `test -f 'tst/StreamBufferTest.cpp' || echo '$(srcdir)/'`tst/StreamBufferTest.cpp

tst/testrunner-StreamBufferTest.obj: tst/StreamBufferTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-StreamBufferTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-StreamBufferTest.Tpo -c -o tst/testrunner-StreamBufferTest.obj `if test -f 'tst/StreamBufferTest.cpp'; then $(CYGPATH_W) 'tst/StreamBufferTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/StreamBufferTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-StreamBufferTest.Tpo tst/$(DEPDIR)/testrunner-StreamBufferTest.Po
#	$(AM_V_CXX)source='tst/StreamBufferTest.cpp' object='tst/testrunner-StreamBufferTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-StreamBufferTest.obj `if test -f 'tst/StreamBufferTest.cpp'; then $(CYGPATH_W) 'tst/StreamBufferTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/StreamBufferTest.cpp'; fi`

tst/testrunner-StreamSocketTest.o: tst/StreamSocketTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-StreamSocketTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-StreamSocketTest.Tpo -c -o tst/testrunner-StreamSocketTest.o `test -f 'tst/StreamSocketTest.cpp' || echo '$(srcdir)/'`tst/StreamSocketTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-StreamSocketTest.Tpo tst/$(DEPDIR)/testrunner-StreamSocketTest.Po
#	$(AM_V_CXX)source='tst/StreamSocketTest.cpp' object='tst/testrunner-StreamSocketTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-StreamSocketTest.o `test -f 'tst/StreamSocketTest.cpp' || echo '$(srcdir)/'`tst/StreamSocketTest.cpp

tst/testrunner-StreamSocketTest.obj: tst/StreamSocketTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-StreamSocketTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-StreamSocketTest.Tpo -c -o tst/testrunner-StreamSocketTest.obj `if test -f 'tst/StreamSocketTest.cpp'; then $(CYGPATH_W) 'tst/StreamSocketTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/StreamSocketTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-StreamSocketTest.Tpo tst/$(DEPDIR)/testrunner-StreamSocketTest.Po
#	$(AM_V_CXX)source='tst/StreamSocketTest.cpp' object='tst/testrunner-StreamSocketTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-StreamSocketTest.obj `if test -f 'tst/StreamSocketTest.cpp'; then $(CYGPATH_W) 'tst/StreamSocketTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/StreamSocketTest.cpp'; fi`

tst/testrunner-SystemExceptionTest.o: tst/SystemExceptionTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SystemExceptionTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-SystemExceptionTest.Tpo -c -o tst/testrunner-SystemExceptionTest.o `test -f 'tst/SystemExceptionTest.cpp' || echo '$(srcdir)/'`tst/SystemExceptionTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SystemExceptionTest.Tpo tst/$(DEPDIR)/testrunner-SystemExceptionTest.Po
#	$(AM_V_CXX)source='tst/SystemExceptionTest.cpp' object='tst/testrunner-SystemExceptionTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SystemExceptionTest.o `test -f 'tst/SystemExceptionTest.cpp' || echo '$(srcdir)/'`tst/SystemExceptionTest.cpp

tst/testrunner-SystemExceptionTest.obj: tst/SystemExceptionTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SystemExceptionTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-SystemExceptionTest.Tpo -c -o tst/testrunner-SystemExceptionTest.obj `if test -f 'tst/SystemExceptionTest.cpp'; then $(CYGPATH_W) 'tst/SystemExceptionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SystemExceptionTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SystemExceptionTest.Tpo tst/$(DEPDIR)/testrunner-SystemExceptionTest.Po
#	$(AM_V_CXX)source='tst/SystemExceptionTest.cpp' object='tst/testrunner-SystemExceptionTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SystemExceptionTest.obj `if test -f 'tst/SystemExceptionTest.cpp'; then $(CYGPATH_W) 'tst/SystemExceptionTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SystemExceptionTest.cpp'; fi`

tst/testrunner-SystemTest.o: tst/SystemTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SystemTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-SystemTest.Tpo -c -o tst/testrunner-SystemTest.o `test -f 'tst/SystemTest.cpp' || echo '$(srcdir)/'`tst/SystemTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SystemTest.Tpo tst/$(DEPDIR)/testrunner-SystemTest.Po
#	$(AM_V_CXX)source='tst/SystemTest.cpp' object='tst/testrunner-SystemTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SystemTest.o `test -f 'tst/SystemTest.cpp' || echo '$(srcdir)/'`tst/SystemTest.cpp

tst/testrunner-SystemTest.obj: tst/SystemTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-SystemTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-SystemTest.Tpo -c -o tst/testrunner-SystemTest.obj `if test -f 'tst/SystemTest.cpp'; then $(CYGPATH_W) 'tst/SystemTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SystemTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-SystemTest.Tpo tst/$(DEPDIR)/testrunner-SystemTest.Po
#	$(AM_V_CXX)source='tst/SystemTest.cpp' object='tst/testrunner-SystemTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-SystemTest.obj `if test -f 'tst/SystemTest.cpp'; then $(CYGPATH_W) 'tst/SystemTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/SystemTest.cpp'; fi`

tst/testrunner-TimerQueueTest.o: tst/TimerQueueTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-TimerQueueTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-TimerQueueTest.Tpo -c -o tst/testrunner-TimerQueueTest.o `test -f 'tst/TimerQueueTest.cpp' || echo '$(srcdir)/'`tst/TimerQueueTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-TimerQueueTest.Tpo tst/$(DEPDIR)/testrunner-TimerQueueTest.Po
#	$(AM_V_CXX)source='tst/TimerQueueTest.cpp' object='tst/testrunner-TimerQueueTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-TimerQueueTest.o `test -f 'tst/TimerQueueTest.cpp' || echo '$(srcdir)/'`tst/TimerQueueTest.cpp

tst/testrunner-TimerQueueTest.obj: tst/TimerQueueTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-TimerQueueTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-TimerQueueTest.Tpo -c -o tst/testrunner-TimerQueueTest.obj `if test -f 'tst/TimerQueueTest.cpp'; then $(CYGPATH_W) 'tst/TimerQueueTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/TimerQueueTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-TimerQueueTest.Tpo tst/$(DEPDIR)/testrunner-TimerQueueTest.Po
#	$(AM_V_CXX)source='tst/TimerQueueTest.cpp' object='tst/testrunner-TimerQueueTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-TimerQueueTest.obj `if test -f 'tst/TimerQueueTest.cpp'; then $(CYGPATH_W) 'tst/TimerQueueTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/TimerQueueTest.cpp'; fi`

tst/testrunner-TimerTest.o: tst/TimerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-TimerTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-TimerTest.Tpo -c -o tst/testrunner-TimerTest.o `test -f 'tst/TimerTest.cpp' || echo '$(srcdir)/'`tst/TimerTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-TimerTest.Tpo tst/$(DEPDIR)/testrunner-TimerTest.Po
#	$(AM_V_CXX)source='tst/TimerTest.cpp' object='tst/testrunner-TimerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-TimerTest.o `test -f 'tst/TimerTest.cpp' || echo '$(srcdir)/'`tst/TimerTest.cpp

tst/testrunner-TimerTest.obj: tst/TimerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-TimerTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-TimerTest.Tpo -c -o tst/testrunner-TimerTest.obj `if test -f 'tst/TimerTest.cpp'; then $(CYGPATH_W) 'tst/TimerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/TimerTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-TimerTest.Tpo tst/$(DEPDIR)/testrunner-TimerTest.Po
#	$(AM_V_CXX)source='tst/TimerTest.cpp' object='tst/testrunner-TimerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-TimerTest.obj `if test -f 'tst/TimerTest.cpp'; then $(CYGPATH_W) 'tst/TimerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/TimerTest.cpp'; fi`

tst/testrunner-TypeNameTest.o: tst/TypeNameTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-TypeNameTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-TypeNameTest.Tpo -c -o tst/testrunner-TypeNameTest.o `test -f 'tst/TypeNameTest.cpp' || echo '$(srcdir)/'`tst/TypeNameTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-TypeNameTest.Tpo tst/$(DEPDIR)/testrunner-TypeNameTest.Po
#	$(AM_V_CXX)source='tst/TypeNameTest.cpp' object='tst/testrunner-TypeNameTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-TypeNameTest.o `test -f 'tst/TypeNameTest.cpp' || echo '$(srcdir)/'`tst/TypeNameTest.cpp

tst/testrunner-TypeNameTest.obj: tst/TypeNameTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-TypeNameTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-TypeNameTest.Tpo -c -o tst/testrunner-TypeNameTest.obj `if test -f 'tst/TypeNameTest.cpp'; then $(CYGPATH_W) 'tst/TypeNameTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/TypeNameTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-TypeNameTest.Tpo tst/$(DEPDIR)/testrunner-TypeNameTest.Po
#	$(AM_V_CXX)source='tst/TypeNameTest.cpp' object='tst/testrunner-TypeNameTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-TypeNameTest.obj `if test -f 'tst/TypeNameTest.cpp'; then $(CYGPATH_W) 'tst/TypeNameTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/TypeNameTest.cpp'; fi`

tst/testrunner-UncaughtExceptionHandlerTest.o: tst/UncaughtExceptionHandlerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-UncaughtExceptionHandlerTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-UncaughtExceptionHandlerTest.Tpo -c -o tst/testrunner-UncaughtExceptionHandlerTest.o `test -f 'tst/UncaughtExceptionHandlerTest.cpp' || echo '$(srcdir)/'`tst/UncaughtExceptionHandlerTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-UncaughtExceptionHandlerTest.Tpo tst/$(DEPDIR)/testrunner-UncaughtExceptionHandlerTest.Po
#	$(AM_V_CXX)source='tst/UncaughtExceptionHandlerTest.cpp' object='tst/testrunner-UncaughtExceptionHandlerTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-UncaughtExceptionHandlerTest.o `test -f 'tst/UncaughtExceptionHandlerTest.cpp' || echo '$(srcdir)/'`tst/UncaughtExceptionHandlerTest.cpp

tst/testrunner-UncaughtExceptionHandlerTest.obj: tst/UncaughtExceptionHandlerTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-UncaughtExceptionHandlerTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-UncaughtExceptionHandlerTest.Tpo -c -o tst/testrunner-UncaughtExceptionHandlerTest.obj `if test -f 'tst/UncaughtExceptionHandlerTest.cpp'; then $(CYGPATH_W) 'tst/UncaughtExceptionHandlerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/UncaughtExceptionHandlerTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-UncaughtExceptionHandlerTest.Tpo tst/$(DEPDIR)/testrunner-UncaughtExceptionHandlerTest.Po
#	$(AM_V_CXX)source='tst/UncaughtExceptionHandlerTest.cpp' object='tst/testrunner-UncaughtExceptionHandlerTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-UncaughtExceptionHandlerTest.obj `if test -f 'tst/UncaughtExceptionHandlerTest.cpp'; then $(CYGPATH_W) 'tst/UncaughtExceptionHandlerTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/UncaughtExceptionHandlerTest.cpp'; fi`

tst/testrunner-WeakCallbackTest.o: tst/WeakCallbackTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-WeakCallbackTest.o -MD -MP -MF tst/$(DEPDIR)/testrunner-WeakCallbackTest.Tpo -c -o tst/testrunner-WeakCallbackTest.o `test -f 'tst/WeakCallbackTest.cpp' || echo '$(srcdir)/'`tst/WeakCallbackTest.cpp
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-WeakCallbackTest.Tpo tst/$(DEPDIR)/testrunner-WeakCallbackTest.Po
#	$(AM_V_CXX)source='tst/WeakCallbackTest.cpp' object='tst/testrunner-WeakCallbackTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-WeakCallbackTest.o `test -f 'tst/WeakCallbackTest.cpp' || echo '$(srcdir)/'`tst/WeakCallbackTest.cpp

tst/testrunner-WeakCallbackTest.obj: tst/WeakCallbackTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tst/testrunner-WeakCallbackTest.obj -MD -MP -MF tst/$(DEPDIR)/testrunner-WeakCallbackTest.Tpo -c -o tst/testrunner-WeakCallbackTest.obj `if test -f 'tst/WeakCallbackTest.cpp'; then $(CYGPATH_W) 'tst/WeakCallbackTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/WeakCallbackTest.cpp'; fi`
	$(AM_V_at)$(am__mv) tst/$(DEPDIR)/testrunner-WeakCallbackTest.Tpo tst/$(DEPDIR)/testrunner-WeakCallbackTest.Po
#	$(AM_V_CXX)source='tst/WeakCallbackTest.cpp' object='tst/testrunner-WeakCallbackTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testrunner_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tst/testrunner-WeakCallbackTest.obj `if test -f 'tst/WeakCallbackTest.cpp'; then $(CYGPATH_W) 'tst/WeakCallbackTest.cpp'; else $(CYGPATH_W) '$(srcdir)/tst/WeakCallbackTest.cpp'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf src/lib/.libs src/lib/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-nodist_pkgconfigDATA: $(nodist_pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-nodist_pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)
install-pkginclude_tstHEADERS: $(pkginclude_tst_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_tst_HEADERS)'; test -n "$(pkginclude_tstdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkginclude_tstdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkginclude_tstdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkginclude_tstdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkginclude_tstdir)" || exit $$?; \
	done

uninstall-pkginclude_tstHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_tst_HEADERS)'; test -n "$(pkginclude_tstdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkginclude_tstdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(pkgincludedir)" "$(DESTDIR)$(pkginclude_tstdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f 3rdparty/gmock/gtest/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f 3rdparty/gmock/gtest/src/$(am__dirstamp)
	-rm -f 3rdparty/gmock/src/$(DEPDIR)/$(am__dirstamp)
	-rm -f 3rdparty/gmock/src/$(am__dirstamp)
	-rm -f src/examples/EchoClient/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/examples/EchoClient/$(am__dirstamp)
	-rm -f src/examples/EchoServer1/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/examples/EchoServer1/$(am__dirstamp)
	-rm -f src/examples/EchoServer2/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/examples/EchoServer2/$(am__dirstamp)
	-rm -f src/examples/SeqPacketEchoClient/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/examples/SeqPacketEchoClient/$(am__dirstamp)
	-rm -f src/examples/SeqPacketEchoServer/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/examples/SeqPacketEchoServer/$(am__dirstamp)
	-rm -f src/lib/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/lib/$(am__dirstamp)
	-rm -f tst/$(DEPDIR)/$(am__dirstamp)
	-rm -f tst/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf 3rdparty/gmock/gtest/src/$(DEPDIR) 3rdparty/gmock/src/$(DEPDIR) src/examples/EchoClient/$(DEPDIR) src/examples/EchoServer1/$(DEPDIR) src/examples/EchoServer2/$(DEPDIR) src/examples/SeqPacketEchoClient/$(DEPDIR) src/examples/SeqPacketEchoServer/$(DEPDIR) src/lib/$(DEPDIR) tst/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nodist_pkgconfigDATA \
	install-pkgincludeHEADERS install-pkginclude_tstHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf 3rdparty/gmock/gtest/src/$(DEPDIR) 3rdparty/gmock/src/$(DEPDIR) src/examples/EchoClient/$(DEPDIR) src/examples/EchoServer1/$(DEPDIR) src/examples/EchoServer2/$(DEPDIR) src/examples/SeqPacketEchoClient/$(DEPDIR) src/examples/SeqPacketEchoServer/$(DEPDIR) src/lib/$(DEPDIR) tst/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
	uninstall-nodist_pkgconfigDATA uninstall-pkgincludeHEADERS \
	uninstall-pkginclude_tstHEADERS

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-cscope \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	cscope cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man \
	install-nodist_pkgconfigDATA install-pdf install-pdf-am \
	install-pkgincludeHEADERS install-pkginclude_tstHEADERS \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES uninstall-nodist_pkgconfigDATA \
	uninstall-pkgincludeHEADERS uninstall-pkginclude_tstHEADERS


libEventLoop.pc: $(top_srcdir)/src/lib/libEventLoop.pc.in
	sed -e 's![@]prefix[@]!$(prefix)!g' \
        -e 's![@]exec_prefix[@]!$(exec_prefix)!g' \
        -e 's![@]includedir[@]!$(includedir)!g' \
        -e 's![@]libdir[@]!$(libdir)!g' \
        -e 's![@]PACKAGE_VERSION[@]!$(PACKAGE_VERSION)!g' \
        -e 's![@]KRB5_LDFLAGS[@]!$(KRB5_LDFLAGS)!g' \
        -e 's![@]KRB5_LIBS[@]!$(KRB5_LIBS)!g' \
        $< > $@

test: testrunner
	$(top_srcdir)/run-tests.sh ./$<

clean-local:
	rm -f libEventLoop.pc testreport.xml testreport-valgrind.log testreport-valgrind.xml

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
